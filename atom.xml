<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Azure Identity Support Blog</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://jpazureid.github.io/"/>
  <updated>2019-04-02T06:06:54.235Z</updated>
  <id>https://jpazureid.github.io/</id>
  
  <author>
    <name>Azure Identity Support Japan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Azure AD サインイン ログ取得方法まとめ</title>
    <link href="https://jpazureid.github.io/azure-active-directory/how-to-get-sign-in-logs/"/>
    <id>https://jpazureid.github.io/azure-active-directory/how-to-get-sign-in-logs/</id>
    <published>2019-02-03T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.235Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Identity チームの三浦です。</p><p>Azure AD のサインイン ログは Azure ポータルで確認するほかに次のような方法で確認することができます。</p><ol><li>ポータルから CSV 形式のファイルをダウンロード</li><li>ポータルから取得したスクリプトを利用して CSV 形式のファイルを取得する</li><li>API を利用して CSV 形式のファイルを取得する</li><li>データをエクスポートし、 PowerBI で解析する</li><li>Log Analytics に統合する</li></ol><p>それぞれ簡単に概要を紹介します。</p><p>なお、 Azure ポータルのサインインからログを確認することを含めて Azure AD テナントに Azure AD Premium のライセンスが必要ですのでご注意ください。</p><h2 id="1-ポータルから-CSV-形式のファイルをダウンロード"><a href="#1-ポータルから-CSV-形式のファイルをダウンロード" class="headerlink" title="1. ポータルから CSV 形式のファイルをダウンロード"></a>1. ポータルから CSV 形式のファイルをダウンロード</h2><p>Azure のポータルからは CSV 形式でサインイン ログをダウンロードすることができます。ここで注意しなければいけないことが 2 点あります。</p><p>1) 5000 件までしか取得できない。<br>FAQ にもありますが、 5000 件までしか入手できません。</p><p>2) 日本語環境で文字化けする<br>ダウンロードした CSV ファイルには BOM (Byte Order Mark の略で Unicode 判別のために利用する情報) が含まれていません。<br>そのため、ダウンロードしたファイルをそのまま Excel で開くと文字化けします。<br>一旦ダウンロードした CSV ファイルを notepad.exe で開き、上書き保存すると BOM が付与されるため、その後は日本語が正しく表示されます。</p><h2 id="2-ポータルから取得したスクリプトを利用して-CSV-形式のファイルを取得する"><a href="#2-ポータルから取得したスクリプトを利用して-CSV-形式のファイルを取得する" class="headerlink" title="2. ポータルから取得したスクリプトを利用して CSV 形式のファイルを取得する"></a>2. ポータルから取得したスクリプトを利用して CSV 形式のファイルを取得する</h2><p>ポータルから CSV 形式でファイルを生成するための PowerShell スクリプトを入手することができます。<br>このスクリプトはカスタマイズ可能ですので、毎回 Azure ポータルにアクセスして CSV をダウンロードしなくともスクリプトの実行によりサインインログを入手できます。<br>このスクリプトを実行するためには、予め Azure の PowerShell モジュールのインストール (PowerShell を管理者で開き install-module azure の実行でインストール) と Set-ExcecutionPolicy unrestricted を実行してスクリプトの実行制限を解除しておく必要があります。</p><h2 id="3-API-を利用して-CSV-形式のファイルを取得する"><a href="#3-API-を利用して-CSV-形式のファイルを取得する" class="headerlink" title="3. API を利用して CSV 形式のファイルを取得する"></a>3. API を利用して CSV 形式のファイルを取得する</h2><p>2 と同じような目的となりますが、私たちのブログで紹介しているスクリプトでも CSV ファイルとして取得できます。</p><p>Microsoft Graph API を利用して Azure AD のサインイン アクティビティ レポートを CSV ファイルで取得する PowerShell スクリプト<br>Azure AD Reporting API を利用して PowerShell より Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを CSV ファイルで取得する方法</p><h2 id="4-データをエクスポートし、-PowerBI-で解析する"><a href="#4-データをエクスポートし、-PowerBI-で解析する" class="headerlink" title="4. データをエクスポートし、 PowerBI で解析する"></a>4. データをエクスポートし、 PowerBI で解析する</h2><p>PowerBI には Azure AD のサインイン ログを解析するためのコンテンツ パックが用意されています。<br>このコンテンツ パックを利用することで、簡単に視覚化されたサインインのデータの確認が可能です。具体的な手順については、 Azure Active Directory Power BI コンテンツ パックの使用方法 を参照ください。</p><h2 id="5-Log-Analytics-に統合する"><a href="#5-Log-Analytics-に統合する" class="headerlink" title="5. Log Analytics に統合する"></a>5. Log Analytics に統合する</h2><p>Azure サブスクリプションをお持ちでしたら是非 Log Analytics と Azure AD のサインインログの統合についても検討してみてください。<br>2019/1 の時点でまだ Public Preview ですが、 Azure Security Center や Application Insights の機能も利用可能です。詳細、具体的な手順については、こちらの公開情報を参照してみてください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。Azure Identity チームの三浦です。&lt;/p&gt;
&lt;p&gt;Azure AD のサインイン ログは Azure ポータルで確認するほかに次のような方法で確認することができます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ポータルから CSV 形式のファイルをダウンロード&lt;/
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
      <category term="Sgin-in log" scheme="https://jpazureid.github.io/tags/Sgin-in-log/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell にて全ユーザーの最終サインイン日時を一括で取得する方法</title>
    <link href="https://jpazureid.github.io/azure-active-directory/last-signin-reports/"/>
    <id>https://jpazureid.github.io/azure-active-directory/last-signin-reports/</id>
    <published>2018-12-11T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.252Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの小野です。今回は、PowerShell で Azure AD 上の全ユーザー（ゲストユーザーも含む）の最終サインイン日時を一括で取得する方法をご紹介します。</p><p>Azure AD における最終サインイン日時は、皆さまから強いご要望を受けており開発チームも機能追加に向け動き出しています。<br>今回ご案内する方法は正式に機能が追加されるまでの回避策となりますが、ご活用いただけますと幸いです。</p><p>この方法を実施すると、以下のようにユーザー毎の最終サインイン時刻が、csv 形式で出力されます。</p><img src="/blog/azure-active-directory/last-signin-reports/csv.png"><p>なお、今回はスクリプトとしてご用意をしたため、Japan Azure ID Support チームの GitHub にアップロードをしましたので、以下サイトをご確認ください。</p><p><a href="https://github.com/jpazureid/get-last-signin-reports" target="_blank" rel="noopener">Get last-sign-in activity reports</a></p><p>今後も、Japan Azure ID Support チームの GitHub には、Azure を利用するにあたり便利なスクリプトをアップロードしてまいります。</p><p>ぜひチェックしてみてください！</p><p>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。上記内容が少しでも皆様の参考となりますと幸いです。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの小野です。今回は、PowerShell で Azure AD 上の全ユーザー（ゲストユーザーも含む）の最終サインイン日時を一括で取得する方法をご紹介します。&lt;/p&gt;
&lt;p&gt;Azure AD における最終
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>ステージング サーバーのすゝめ</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/introduction-staging-server/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/introduction-staging-server/</id>
    <published>2018-11-26T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.369Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Identity チームの金森です。<br>今回は Azure AD Connect (AADC) サーバーの運用にあたって、さまざまなメリットが享受できる [Staging サーバー] のご紹介です！</p><p>AADC が担っているディレクトリ同期やパスワード同期は AADC サーバーが停止した場合も [AAD 上のユーザーやグループなどのオブジェクト情報] はそのままであり、AADC そのものが認証処理を担っている訳ではないため業務への影響はそこまでは大きくないと言えます。<br>もちろんパススルー認証 (PTA) の構成にしており、PTA エージェントが AADC と同居しているそのサーバー1台だけ、という場合は AADC サーバーの停止 = AAD への認証ができなくなることになるため、影響は大きくなることが予想されます。</p><p>※ そんな懸念に対しては PTA エージェントの役割を持つサーバーを複数台用意しましょう！DC サーバーと同じく認証基盤を担うサーバーですので、冗長構成が基本です。</p><p>つまり、AADC サーバー (＝ディレクトリ同期) が停止しても業務影響が小さいと判断すること自体は誤りではないのですが、それが故に AADC サーバーを1台だけで構成されているお客様もいらっしゃいます。<br>しかし、運用していく中で以下のようなお悩みが生じることがままあります。</p><ul><li>バージョン アップを検討しているけど、いきなりアップしてすでに同期済みのユーザーとかグループに影響はないかな…</li><li>(同期元になるオンプレ AD 側のリプレースなど) 大きく ID 基盤の環境が変わる予定があるけど、 ちゃんと同期済みのユーザーとかグループとの紐づけ状態は維持されるかな…</li><li>そろそろサーバーのリプレースだけど、新規に構築する AADC サーバーは今まで通りに動作するかな…</li></ul><p>そんなお悩みも、Staging サーバーをご用意いただけば多くの課題が解決できます！<br>加えて障害復旧の際の復旧までの時間を短縮できる効果も、もちろん期待でき、Active サーバーが障害で停止…といったような [いざ] というときにも安心です。</p><p>それでは、そんなメリットが多い Staging サーバーを以下の流れでご紹介させていただきます！</p><ol><li><strong>Staging サーバーとは？</strong></li><li><strong>Staging サーバーの構成方法</strong></li><li><strong>どうやって大きな作業に向けた事前確認で安心できるの？</strong></li></ol><h2 id="1-Staging-サーバーとは？"><a href="#1-Staging-サーバーとは？" class="headerlink" title="1. Staging サーバーとは？"></a>1. Staging サーバーとは？</h2><p>シンプルに言えば [Export (書き込み) を行わない、アイドリング状態のサーバー] です。<br>以下は Active サーバーと Staging サーバーを並べて構成したイメージとなります。<br><img src="/blog/azure-active-directory-connect/introduction-staging-server/aadc_staging_1-1.jpg"></p><p>左が Active サーバー、右が Staging サーバーになります。<br><br>見ての通り [Import で最新の情報を取り込み、Sync でデータベースを更新する] ところまでは一緒ですが、最後の Export (書き込み) 処理をしない、というのが Staging サーバーの動作です。<br><br>それぞれのコンポーネントに関しては <a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/plan-connect-performance-factors#azure-ad-connect-component-factors" target="_blank" rel="noopener">こちら</a> の技術情報が参考になるので、ぜひご一読いただければと思います。</p><p>Export さえしなければ、既存のオンプレ AD にも AAD にも何も影響を与えることはありませんので、Staging　サーバーを構築することには何もリスクがないことになります！<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/plan-connect-topologies#staging-server" target="_blank" rel="noopener">こちら</a> の技術情報にも Staging サーバーの参考情報がございますので、ぜひこちらも併せてご参照ください！</p><p>ポイントは [最新のオブジェクト情報の取り込みと学習を行っているため、<span style="color: red; "><strong>Export する準備ができた状態のデータを持っている</strong></span>] という点です。</p><h2 id="2-Staging-サーバーの構成方法"><a href="#2-Staging-サーバーの構成方法" class="headerlink" title="2. Staging サーバーの構成方法"></a>2. Staging サーバーの構成方法</h2><p>Staging サーバーの構成方法はすこぶる簡単です！<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-connect-sync-staging-server#staging-mode" target="_blank" rel="noopener">こちら</a> の技術情報にも案内がございますが、AADC をカスタム インストールで新規にインストールするウィザードの一番最後の実行直前の画面にて [ステージング モードを有効にする] のチェックを入れるだけです。簡単ですね。</p><p>※ もちろん、Active サーバーと Staging サーバーの [AADC としての設定] は同じである前提のご案内となります。</p><p>また、インストール後に Active から Staging へ、もしくはその逆にモードを変更するのも非常に簡単です。<br>インストール後の環境で Azure AD Connect ウィザード　(C:\Program Files\Microsoft Azure Active Directory Connect\AzureADConnect.exe)　を起動して、追加のタスク画面にて [ステージング モードの構成] メニューを選択するだけです。<br>※ <a href="/blog/azure-active-directory-connect/how-to-upgrade/">こちら</a> の Blog でも Staging サーバーの構成手順をご紹介しておりますので、併せて参考にしていただければと思います！<br><img src="/blog/azure-active-directory-connect/introduction-staging-server/aadc_staging_2-1.jpg"></p><p>(バージョン 1.2.67.0 の画面です。バージョンによって表示が違う場合があります。)</p><p>ウィザードを進めると以下のようなメニューが表示されるので、チェックを入れて進めれば Staging モードに、チェックを外して進めれば Active モードに切り替えられます。<br><img src="/blog/azure-active-directory-connect/introduction-staging-server/aadc_staging_2-2.jpg"></p><p>ご注意いただきたいポイントとして [1つの AAD テナントには1台の AADC Active サーバーのみがサポートされるトポロジである] 点です。<br>前述した <a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/plan-connect-topologies" target="_blank" rel="noopener">こちら</a> の技術情報でサポートされる/されないトポロジをご案内していますが、<span style="color: red; "><strong>1つの AAD テナントに複数の Active な AADC サーバーから同期を行う構成は取れません</strong></span>のでご注意ください。</p><p>※ なお、ステージング サーバーは Export 処理を行わないので、複数台構成しても同期処理そのもののスケールアウト/性能向上につながる訳ではない点にもご注意ください。</p><p>もし Active な AADC サーバーが障害で停止しても、Staging サーバーがあれば、すかさず AADC のウィザードを再実行し、 Staging の AADC サーバーを Active モードにしてあげれば、ディレクトリ同期処理がすぐに継続再開できるので安心です。<br>そんなに同期元のオンプレ AD でオブジェクト情報の変更を行う予定が無いから AADC が止まっててもすぐには困らない…という場合もあるかもしれませんが、例えばパスワード ハッシュ同期やパスワード ライトバックのオプションもご利用の場合は、Active な AADC サーバーが稼働していることでパスワードのハイブリッド管理状態が継続できているため、より耐障害性の高さがメリットになるかと思います。</p><h2 id="3-どうやって大きな作業に向けた事前確認で安心できるの？"><a href="#3-どうやって大きな作業に向けた事前確認で安心できるの？" class="headerlink" title="3. どうやって大きな作業に向けた事前確認で安心できるの？"></a>3. どうやって大きな作業に向けた事前確認で安心できるの？</h2><p>最初に記載したお悩み例を再掲します。</p><ul><li>バージョン アップを検討しているけど、いきなりアップしてすでに同期済みのユーザーとかグループに影響はないかな…</li><li>(同期元になるオンプレ AD 側のリプレースなど) 大きく ID 基盤の環境が変わる予定があるけど、 ちゃんと同期済みのユーザーとかグループとの紐づけ状態は維持されるかな…</li><li>そろそろサーバーのリプレースだけど、新規に構築する AADC サーバーは今まで通りに動作するかな…</li></ul><p>それぞれに共通したお悩みポイントは、 [同期元オンプレ AD や AADC サーバーそのものに変更があった時に、認証に使用している大事な AAD ユーザーやグループ オブジェクトが影響を受けずに変わらず利用し続けることができるか] に集約されます。</p><p>このお悩みを解決する [切り替え後の正常性の事前確認方法] ですが、前述した <a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-connect-sync-staging-server#staging-mode" target="_blank" rel="noopener">こちら</a> の技術情報にある <strong>CSExportAnalyzer</strong> を使用した分析がその方法となります。</p><ol><li>に記述した通り、Staging サーバーは [<span style="color: red; "><strong>Export する準備ができた状態のデータを持っている</strong></span>] ので、言い換えると [<span style="color: red; "><strong>Export を実行したら現在の AAD のオブジェクトにこんな追加/変更/削除を行うよ！</strong></span>] というデータを持っていることになります。<br><br>そのため、Staging サーバーを Active にする前にその追加/変更/削除される予定のデータを確認し、何も変更点が無い、もしくは変更される予定のデータがあっても既存の AAD のオブジェクトとしては影響が無いことが確認できれば、安心して Active モードに変更することができますね。</li></ol><p><strong>CSExportAnalyzer</strong> を使用した [これから Export する予定のデータを確認する方法] は、技術情報にも記載がありますが改めて以下にご紹介します。</p><ol><li>事前に最新の情報を学習しておくために、AADC Staging サーバーで同期を行います。すでにインストール終了時に完全同期、以降の定期的な差分同期が実行されているようであれば最新の状態で差分同期することで問題ありません。<br>もし一度も同期を行っていない、もしくは AADC の同期ルールをカスタムしたり、同期対象 OU の変更を行った後に一度も完全同期をしていない場合は、完全同期を行ってください。 </li></ol><p>PowerShell を管理者として起動して、以下のコマンドを実行してください。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Start-ADSyncSyncCycle Initial : 完全同期の開始</span><br><span class="line">Start-ADSyncSyncCycle Delta : 差分同期の開始</span><br></pre></td></tr></table></figure></p><p>また、以下のコマンドを実行して AAD 向けコネクターの名前を確認しておくと 2. の手順で利用できて便利です。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-ADSyncConnector | fl name</span><br></pre></td></tr></table></figure></p><p>/// 出力例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name : contoso.onmicrosoft.com - AAD : 同期先 AAD テナント向けのコネクター名です。</span><br><span class="line">Name : contoso.local : 同期元オンプレ AD 向けのコネクター名です。</span><br><span class="line">``` </span><br><span class="line">2. 最新の情報を学習する同期の終了後、コマンド プロンプトを管理者として起動して以下のコマンドを実行します。</span><br></pre></td></tr></table></figure></p><p>C:\Program Files\Microsoft Azure AD Sync\Bin\csexport.exe “contoso.onmicrosoft.com - AAD” C:\temp\AADexport.xml /f:x<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">引数の AAD テナント向けコネクター名はご利用環境に即したものを指定します。  </span><br><span class="line">出力する xml ファイルのパスとファイル名の指定は任意で問題ありません。  </span><br><span class="line">/f:x は、このコマンドで出力する対象のデータをフィルターするオプションで、その条件を [Export 待ちになっているデータ] としています。</span><br><span class="line"> </span><br><span class="line">これで AADC が把握している最新の学習情報より、Export を実行したら追加/変更/削除される予定のデータのみが xml に出力されます。</span><br><span class="line"> </span><br><span class="line">3. そのままでは見づらいので以下のコマンドを実行して解析しやすく整形して csv ファイルとして保存します。</span><br></pre></td></tr></table></figure></p><p>C:\Program Files\Microsoft Azure AD Sync\Bin\CSExportAnalyzer.exe C:\temp\AADexport.xml &gt; C:\temp\AADexport.csv<br><code>`</code></p><ol start="4"><li>出力された csv ファイルを開きます。エクセルで開いてカンマ区切りで表示すると見やすいです。</li></ol><p>新規ユーザーの作成、既存ユーザーの属性値変更、既存ユーザーの削除、の3つのオブジェクトの更新がある状態で取得したサンプルが以下です。<br><img src="/blog/azure-active-directory-connect/introduction-staging-server/aadc_staging_3-1.jpg"></p><p>見やすくなるように整形していますが、ポイントになる見方は以下の通りです。</p><ul><li>OMODT 欄は [オブジェクトに対する処理の種類] です。この欄が add なら新規のオブジェクト追加、update なら既存のオブジェクトへの変更、delete なら既存オブジェクトの削除を意味します。</li><li>AMODT 欄は [オブジェクトの中の属性に対する処理の種類] です。add なら新規の属性追加、update なら既存の属性値の変更、delete なら既存属性値の削除を意味します。</li><li>OMODT と AMODT が add なら、それは新規のユーザー等のオブジェクトになります。</li><li>属性単位で1行になるので、新規ユーザーを同期しようとしている場合は例のように [DN 値が同じ = 同じオブジェクトに対して追加される属性] ごとに行が記録されます。</li><li>この例では、既存のユーザーの mail 属性を <a href="mailto:oldmail@contoso.com" target="_blank" rel="noopener">oldmail@contoso.com</a> から <a href="mailto:newmail@contoso.com" target="_blank" rel="noopener">newmail@contoso.com</a> に変更している前提です。</li><li>最下部にオブジェクト単位の処理数の集計結果があります。</li></ul><p>なお、サンプル csv の原本も以下からダウンロード可能です。拡張子を .txt から .csv にしてご参照ください。<br><a href="https://github.com/jpazureid/blog/tree/master/azure-active-directory-connect/aadc_staging/AADexportSample.txt" target="_blank" rel="noopener">AADexportSample</a></p><p>この CSV の結果が以下であれば、現在 Staging モードの AADC を Active にしても AAD 側の既存オブジェクトの利用には影響が無い、と判断していただけます。</p><ul><li><p><strong>何も結果が無い、追加も変更も削除も無い</strong><br>つまり、Staging モードを Active にして Export 処理が行われても、AAD 側の既存オブジェクトには何も変更が生じない、という確証が得られます。</p></li><li><p><strong>OMODT が update、AMODT が add もしくは delete になっているが、対象の属性値は AAD 側の既存オブジェクトの利用に対して何も影響が無い</strong><br>これは AADC のバージョン変更や、同期元 AD ドメインの構成変更などで良くあるパターンです。<br><a href="/blog/azure-active-directory-connect/cantphsback-aadc/">こちら</a> の Blog の下部でもご紹介していますが、AADC はバージョンによって同期対象の属性に違いがある場合があるので、バージョン アップによって AAD 側に Export される属性が増えていると、csv では [OMODT : update、AMODT : add] として対象の属性が全オブジェクトに対して追加される結果が得られます。<br>もしくは、同期元 AD ドメインのリプレースなどでは、同じ名前のユーザーであっても新旧 AD ドメインのユーザーそれぞれの持つ SID 値や最後のパスワード変更日時など、当然違ってくる属性値があるため、そのような場合は [OMODT : update、AMODT : update] のように差分が出力されます。<br>いずれの場合も、[構成や前提に対して発生するべくして発生している正しい差分] となるので、何らかの変更予定が出力されていてもそれが予定作業内容に沿ったものであれば問題ない、と事前に確認と判断を行うことができます。</p></li></ul><p>ここで再度お悩み例と、その解決策を記載します！もう Stagingサーバーを導入しない理由が無いですね。</p><ul><li><p>バージョン アップを検討しているけど、いきなりアップしてすでに同期済みのユーザーとかグループに影響はないかな…<br>-&gt;事前に Staging モードの AADC としてアップ予定のバージョンをインストールし、CSExportAnalyzer の結果をチェックしておけば既存の AAD オブジェクトへの影響有無を確認できる！</p></li><li><p>(同期元になるオンプレ AD 側のリプレースなど) 大きく ID 基盤の環境が変わる予定があるけど、 ちゃんと同期済みのユーザーとかグループとの紐づけ状態は維持されるかな…<br>-&gt;事前に Staging モードの AADC を構成し、変更予定のオンプレ AD 環境を同期元にして同期を行い CSExportAnalyzer の結果をチェックしておけば既存の AAD オブジェクトへの影響有無を確認できる！</p></li><li><p>そろそろサーバーのリプレースだけど、新規に構築する AADC サーバーは今まで通りに動作するかな…<br>-&gt;事前に Staging モードの AADC としてリプレース先になるサーバーを構成し、CSExportAnalyzer の結果をチェックしておけば既存の AAD オブジェクトへの影響有無を確認できる！</p></li></ul><p>なお、注意点としてこの事前確認は [AAD にクラウド ユーザーを直接作成して運用している環境に対して、オンプレ AD とのディレクトリ同期を新規に導入し、ソフトマッチにより同期元 AD ユーザーと同期先 AAD ユーザーの紐づけを行う] 場合にはご利用いただけない、という点がございます。<br><br>これは、CSExportAnalyzer によるチェック対象のデータは [AADC が把握できているオブジェクト情報] となるのですが、前述の導入シナリオの場合 AAD 側のオブジェクトはクラウド上に直接作成されているため、AAD からの Import 処理時に AADC は [自分の管理対象外のオブジェクト] と認識し Import 対象外として、オブジェクト情報を学習しないためです。<br>前述の導入シナリオでソフトマッチが期待した通り動作するかを確認される場合は、テスト ユーザーをご用意して正しくマッチ処理が行わるかを確認し、それから同期元 AD オブジェクトの範囲を広げてください。</p><p>上記内容が皆様の参考となりますと幸いです。どちら様も素敵な AAD ライフをお過ごしください。</p><p>ご不明な点等がありましたら、ぜひ弊社サポート サービスをご利用ください。<br>※本情報の内容（リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。Azure Identity チームの金森です。&lt;br&gt;今回は Azure AD Connect (AADC) サーバーの運用にあたって、さまざまなメリットが享受できる [Staging サーバー] のご紹介です！&lt;/p&gt;
&lt;p&gt;AADC が担っているディレクト
      
    
    </summary>
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/tags/AAD-Connect/"/>
    
  </entry>
  
  <entry>
    <title>サブスクリプション作成時のエラー「アカウントが Azure サブスクリプションに関連付けられないディレクトリに属しています。別のアカウントでサインインしてください」</title>
    <link href="https://jpazureid.github.io/azure-active-directory/create-subscription-error/"/>
    <id>https://jpazureid.github.io/azure-active-directory/create-subscription-error/</id>
    <published>2018-10-31T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.193Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの小野です。</p><p>今回は、Azure におけるサブスクリプション作成時に表示される「アカウントが Azure サブスクリプションに関連付けられないディレクトリに属しています。別のアカウントでサインインしてください」というエラーの発生原因と対処策についてご紹介します。</p> <img src="/blog/azure-active-directory/create-subscription-error/error.png"><p>本エラーは、サブスクリプション作成を試みたユーザー (のメールアドレス) が ”セルフサービス サインアップ テナント” に紐づいている場合に発生します。</p><h2 id="セルフサービス-サインアップ-テナントとは"><a href="#セルフサービス-サインアップ-テナントとは" class="headerlink" title="セルフサービス サインアップ テナントとは"></a>セルフサービス サインアップ テナントとは</h2><p>セルフサービス サインアップ テナントとは、管理者により作成されたテナントではなく、ユーザーが Azure Active Directory(以下、Azure AD ) による認証を必須とするサービスにサインアップした (利用を試みた) 場合に自動で作成されるテナントです。具体的には Power BI などのサービスになりますが、サービスを利用するためにサインアップを試みた際に指定したユーザーのメール アドレスに含まれるドメイン名が Azure AD にまだ登録されていない場合には、自動で Azure AD テナントが作成され、これがセルフサービス サインアップ テナントになります。通常 Azure AD テナントには必ず管理者が存在しますが、このセルフサービス サインアップ テナントには管理者が存在しません。この管理者が存在しないテナントではサブスクリプションを紐づけることができないため、発生しているエラーが今回ご紹介しているエラーメッセージになります。</p><p>対処策としては、以下の手順にてテナントの管理者への昇格をする必要があります。</p><h2 id="エラーの対処法"><a href="#エラーの対処法" class="headerlink" title="エラーの対処法"></a>エラーの対処法</h2><p>以下手順にて管理者に昇格します。</p><ol><li><p>該当のユーザーで、<a href="https://www.office.com" target="_blank" rel="noopener">https://www.office.com</a> へログインし、管理を選択します。</p> <img src="/blog/azure-active-directory/create-subscription-error/1.png"></li><li><p>以下画面が表示されますので、”はい、私が管理者になります”を選択します。</p> <img src="/blog/azure-active-directory/create-subscription-error/2.png"></li><li><p>ドメインを認証するために、TXT レコードの更新が求められます。</p><p> ドメインに指定されたTXT レコードを追加し、”レコードを追加しました”を選択します。なお、このTXT レコードは、管理者への昇格が終わりましたら削除いただいて構いません。</p> <img src="/blog/azure-active-directory/create-subscription-error/3.png"></li><li><p>TXT レコードの確認が完了すると、以下が表示されます。</p><p> この画面が表示されますと、無事サブスクリプションを作成することができます。</p> <img src="/blog/azure-active-directory/create-subscription-error/4.png"></li></ol><p>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。上記内容が少しでも皆様の参考となりますと幸いです。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの小野です。&lt;/p&gt;
&lt;p&gt;今回は、Azure におけるサブスクリプション作成時に表示される「アカウントが Azure サブスクリプションに関連付けられないディレクトリに属しています。別のアカウントでサイ
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>証明書認証のトラブルシューティング</title>
    <link href="https://jpazureid.github.io/active-directory-federation-service/adfs-cba-ts/"/>
    <id>https://jpazureid.github.io/active-directory-federation-service/adfs-cba-ts/</id>
    <published>2018-10-31T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:53.930Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identitiy サポートチームの竹村です。<br>今回は、多くのお客様からお問合せをいただく AD FS のクライアント証明書認証の問題について、既知の事例や対応方法をご紹介します。</p><h2 id="最初に行うこと"><a href="#最初に行うこと" class="headerlink" title="最初に行うこと"></a>最初に行うこと</h2><p>証明書認証の問題は、大きく 2つのパターンに分けられます。</p><h3 id="A-クライアントが証明書を送信しないケース"><a href="#A-クライアントが証明書を送信しないケース" class="headerlink" title="(A) クライアントが証明書を送信しないケース"></a>(A) クライアントが証明書を送信しないケース</h3><h3 id="B-クライアントから証明書を選択して送信したものの、正常に動作しないケース"><a href="#B-クライアントから証明書を選択して送信したものの、正常に動作しないケース" class="headerlink" title="(B) クライアントから証明書を選択して送信したものの、正常に動作しないケース"></a>(B) クライアントから証明書を選択して送信したものの、正常に動作しないケース</h3><p>トラブルシューティングを進める際には、まず、どちらのケースに該当するかを確認します。<br><br><br><br>※ 注意<br><br>証明書認証では、認証を試みる際に証明書を選択するポップアップが表示されます。しかし、 IE には、有効な証明書が 1つしか存在しない場合に、自動的に送信する機能があります。<br>一見 (A) のケースのように見えていても、実際にはバックグラウンドで自動的に証明書を送信している可能性があります。<br>インターネット オプションの 「セキュリティ」 タブで、各ゾーンの 「レベルのカスタマイズ」 から以下の設定を確認しておきます。<br>この設定を「無効にする」にしておくことで、有効な証明書が 1つしか無い場合にもポップアップしてユーザーが選択する動作になりますので、確認が容易になります。</p><img src="/blog/active-directory-federation-service/adfs-cba-ts/adfs_cba_01.jpg"> <p>※ 既定では、「ローカル イントラネット」ゾーンのみ有効となっていますが、念のため各ゾーンの設定をご確認ください。<br><br><br><br>次に、それぞれのケースにおける代表的な問題について説明して行きます。<br>すでにクライアント側に証明書が表示されている場合には、(A) は飛ばして (B) からご確認ください。<br><br></p><h2 id="A-クライアントが証明書を送信しないケース-1"><a href="#A-クライアントが証明書を送信しないケース-1" class="headerlink" title="(A) クライアントが証明書を送信しないケース"></a>(A) クライアントが証明書を送信しないケース</h2><p>このケースの問題は、CTL (Certificate Trust List) に起因していることがほとんどです。<br>CTL に関する詳細は割愛しますが、簡単に説明しますと、証明書認証では、AD FS / WAP サーバー側が信頼している証明機関のリスト (CTL) をクライアントに送信します。クライアントはそのリストに存在する証明機関から発行された証明書のみをユーザーに表示し、選択させます。<br>つまり、CTL が正常にクライアントに送信されなかったり、CTL の中にクライアント証明書を発行した証明機関が含まれない場合、クライアント側に証明書が表示されません。<br>AD FS / WAP では、この CTL を送信する機能が既定で有効です。<br>以下に、有効な確認ポイントや切り分け方法をいくつかご紹介します。</p><h3 id="1-AD-FS-WAP-で、ローカル-コンピューター-の「信頼されたルート証明機関」に、クライアント証明書を発行した証明機関の証明書が含まれることを確認します。"><a href="#1-AD-FS-WAP-で、ローカル-コンピューター-の「信頼されたルート証明機関」に、クライアント証明書を発行した証明機関の証明書が含まれることを確認します。" class="headerlink" title="(1) AD FS / WAP で、ローカル コンピューター の「信頼されたルート証明機関」に、クライアント証明書を発行した証明機関の証明書が含まれることを確認します。"></a>(1) AD FS / WAP で、ローカル コンピューター の「信頼されたルート証明機関」に、クライアント証明書を発行した証明機関の証明書が含まれることを確認します。</h3><p>既定でサーバー側 (AD FS / WAP) は CTL に自身の「信頼されたルート証明機関」を含めます。<br>したがって、「信頼されたルート証明機関」にクライアント証明書を発行した証明機関が含まれていないと、クライアント側では証明書が表示されません。</p><h3 id="2-AD-FS-WAP-で、ローカル-コンピューター-の「信頼されたルート証明機関」に、「ルート証明書」でないものが含まれていないかどうかを確認します。"><a href="#2-AD-FS-WAP-で、ローカル-コンピューター-の「信頼されたルート証明機関」に、「ルート証明書」でないものが含まれていないかどうかを確認します。" class="headerlink" title="(2) AD FS / WAP で、ローカル コンピューター の「信頼されたルート証明機関」に、「ルート証明書」でないものが含まれていないかどうかを確認します。"></a>(2) AD FS / WAP で、ローカル コンピューター の「信頼されたルート証明機関」に、「ルート証明書」でないものが含まれていないかどうかを確認します。</h3><p>サーバー側で CTL を作成する際に、「信頼されたルート証明機関」に含まれるものをリストしますが、その際に「ルート証明書」以外が存在することを検知すると、CTL を正常に生成できず、結果としてクライアント側で証明書が表示されないケースがあります。<br>「ルート証明書」は、「発行先(サブジェクト)」 と「発行者」が一致している証明書ですので、それ以外の証明書が信頼されたルート証明機関ストアに含まれていないか確認します。</p><p>ルート証明機関のストアは次の手順で確認します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.AD FS / WAP サーバーで &quot;ファイル名を指定して実行&quot; から &quot;certlm.msc&quot; を起動します。</span><br><span class="line">2.左ペインに [証明書 - ローカル コンピューター] と表示されていることを確認のうえ、 </span><br><span class="line"> 「信頼されたルート証明機関」 - 「証明書」 を展開し、発行先と発行者が一致しないものが含まれないか確認します。</span><br></pre></td></tr></table></figure></p><h3 id="3-CTL-の送信を無効にして動作を確認してみます。"><a href="#3-CTL-の送信を無効にして動作を確認してみます。" class="headerlink" title="(3) CTL の送信を無効にして動作を確認してみます。"></a>(3) CTL の送信を無効にして動作を確認してみます。</h3><p>サーバー側の設定で、CTL の送信を無効にすることができます。<br>もし無効にすることで証明書がクライアントに表示される場合、明らかに CTL の問題に起因していることが確認でき、調査、対応をこの一点にフォーカスさせることができますので、有効な切り分けです。上記の (1) や (2) の確認を実施する前にこの切り分けを実施してしまうのも有効です。 (ただし再起動が必要なのでその点についてはご注意ください)<br>CTL の送信を無効にするには、サーバー側で以下のレジストリ値を 0 に設定し、再起動します。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">レジストリ キー : HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\Schannel</span><br><span class="line">名前: SendTrustedIssuerList</span><br><span class="line">型: REG_DWORD</span><br><span class="line">値: 0 (無効) / 1 (有効)</span><br></pre></td></tr></table></figure><p>なお、複数の AD FS / WAP サーバーが存在する場合、切り分けの際には、hosts ファイルなどで接続先の AD FS / WAP を固定して確認することをお奨めします。<br>(接続先のサーバーを固定することができない場合には、どのサーバーに接続されるか分かりませんので、すべてのサーバーで設定する必要があります)</p><h3 id="4-CTL-ストアの設定を確認したり、固有の-CTL-ストアを作成します。"><a href="#4-CTL-ストアの設定を確認したり、固有の-CTL-ストアを作成します。" class="headerlink" title="(4) CTL ストアの設定を確認したり、固有の CTL ストアを作成します。"></a>(4) CTL ストアの設定を確認したり、固有の CTL ストアを作成します。</h3><p>既定 (CTL ストアの設定が null の状態) では、上述のとおり「信頼されたルート証明機関」に含まれる証明機関が CTL にリストされます。<br>しかし、CTL ストアは個別に設定することも可能です。<br>CTL ストアの設定状況は、以下の netsh コマンドで確認することができます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh http show sslcert</span><br></pre></td></tr></table></figure><p>管理者権限で上記のコマンドをコマンドプロンプトから実行すると、いくつか SSL のバインドの情報が表示されるかと思います。<br>その中で、証明書認証に利用する 【フェデレーションサービス名】:49443 の情報を確認します。<br>(AD FS 2016 以降では、環境によっては 49443 ポートではなく、certauth.【フェデレーションサービス名の FQDN】:443 である可能性もあります。)</p><p>以下は、フェデレーションサービス名が sts.test.com である場合の実行結果例です。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">netsh http show sslcert</span><br><span class="line"></span><br><span class="line">Hostname:port               : sts.test.com:49443 ★&lt;&lt;&lt; ポート49443 に関する設定です。こちらを確認します。</span><br><span class="line">Certificate Hash             : 47b90e1e818ba8cf431d404fff232f1ba17bf078 ★ &lt;&lt;&lt; SSL サーバー証明書に対して一意で、環境によって異なります。</span><br><span class="line">Application ID               : &#123;5d89a20c-beab-4389-9447-324788eb944a&#125; ★ &lt;&lt;&lt; AD FS サービスを示すもので、全環境で同一です。</span><br><span class="line">Certificate Store Name       : MY</span><br><span class="line">Verify Client Certificate Revocation : Enabled</span><br><span class="line">Verify Revocation Using Cached Client Certificate Only : Disabled</span><br><span class="line">Usage Check                 : Enabled</span><br><span class="line">Revocation Freshness Time   : 0</span><br><span class="line">URL Retrieval Timeout       : 0</span><br><span class="line">Ctl Identifier               : (null)</span><br><span class="line">Ctl Store Name               : (null) ★&lt;&lt;&lt; 既定では null です。443 ポートど同様に AdfsTrustedDevices などが設定されている場合、null に戻す必要があります。</span><br><span class="line">DS Mapper Usage             : Disabled</span><br><span class="line">Negotiate Client Certificate : Enabled</span><br></pre></td></tr></table></figure><p>この CTL ストアを個別に指定して、クライアント証明書を発行した証明機関のみを含めることで、他の証明機関の証明書の影響を取り除くことができます。<br>以下に、設定手順をご紹介します。<br><br><br><br>1.管理者権限でコマンドプロンプトを起動し、以下のように実行します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">certutil -f -addstore &lt;任意の証明書ストア名&gt; &lt;クライアント証明書のルート証明書&gt;</span><br><span class="line"></span><br><span class="line">(例)</span><br><span class="line">certutil -f -addstore adfsclient c:\temp\rootca.cer</span><br><span class="line"></span><br><span class="line">※ c:\temp\rootca.cer は、クライアント証明書を発行したルートCA の証明書をエクスポートした .cer ファイルです。</span><br><span class="line">※ このコマンドにより、adfsclient という名前のストアが作成され、ルートCA の証明書がインポートされます。</span><br></pre></td></tr></table></figure></p><p>2.続いて以下のコマンドを実行し、作成したストア内にルートCAの証明書が存在することを確認します。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">certutil -store adfsclient</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">3.続いて以下のコマンドを実行し、現状の 49443 ポートの SSL バインドを一旦削除します。</span><br></pre></td></tr></table></figure><p>netsh http delete sslcert hostnameport=sts.test.com:49443</p><p>※ hostnameport には、お客様の環境で確認した値を指定します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4.続いて以下のコマンドを実行し、CTLストアを作成したものに指定し、SSL バインドを設定します。</span><br></pre></td></tr></table></figure></p><p>netsh http add sslcert hostnameport=sts.testcom:49443 certhash=47b90e1e818ba8cf431d404fff232f1ba17bf078 appid={5d89a20c-beab-4389-9447-324788eb944a} certstorename=MY sslctlstorename=adfsclient</p><p>※ hostnameport、certhash には、お客様の環境で確認した値を指定します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">5.続いて以下のコマンドを実行し、CTLストアが更新されていることをご確認ください。</span><br></pre></td></tr></table></figure></p><p>netsh http show sslcert</p><p>Hostname:port               : sts.test.com:49443<br>Certificate Hash             : 47b90e1e818ba8cf431d404fff232f1ba17bf078<br>Application ID               : {5d89a20c-beab-4389-9447-324788eb944a}<br>Certificate Store Name       : MY<br>Verify Client Certificate Revocation : Enabled<br>Verify Revocation Using Cached Client Certificate Only : Disabled<br>Usage Check                 : Enabled<br>Revocation Freshness Time   : 0<br>URL Retrieval Timeout       : 0<br>Ctl Identifier               : (null)<br>Ctl Store Name               : adfsclient ★&lt;&lt;&lt; 個別に作成したストアが設定されています。<br>DS Mapper Usage             : Disabled<br>Negotiate Client Certificate : Enabled<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">クライアント側に証明書が表示されないケースは、上記の対応で解決できることが多いので、参考になれば幸いです。</span><br><span class="line">&lt;br&gt;</span><br><span class="line">## (B) クライアントから証明書を選択して送信したものの、正常に動作しないケース</span><br><span class="line"></span><br><span class="line">このケースでの原因は、WAP サーバー、あるいは AD FS サーバーで失効確認に失敗しているケースがほとんどですが、それ以外を含めて以下に、いくつか確認のポイントをご紹介します。</span><br><span class="line">&lt;br&gt;</span><br><span class="line">### (1) 証明書を受信するサーバー (外部接続の場合は WAPサーバー、社内接続の場合は AD FS サーバー) で、49443 ポートが開放されていることを確認します。</span><br><span class="line"></span><br><span class="line">稀に証明書を受信するポートが開放されておらず、ネットワーク的に証明書を受け取れないケースがあります。</span><br><span class="line">念のため、ご確認ください。</span><br><span class="line"></span><br><span class="line">### (2) 証明書のサブジェクト代替名に認証ユーザーの UPN が設定されていることを確認します。</span><br><span class="line"></span><br><span class="line">AD FS の証明書認証では、サブジェクト代替名に認証ユーザーの UPN が設定されている必要があります。</span><br><span class="line">(サブジェクト代替名に設定が存在しない場合には、サブジェクトに認証ユーザーの DN が設定されている必要があります。Windows ではサブジェクト代替名を優先するので、一般的にはサブジェクト代替名に UPN をセットした証明書を利用します)</span><br><span class="line">こちらも、念のためご確認ください。</span><br><span class="line"></span><br><span class="line">### (3) ルート CA の証明書、中間 CA の証明書 (存在する場合)  が、適切にインポートされていることを確認します。</span><br><span class="line"></span><br><span class="line">AD FS サーバー、WAPサーバー、クライアント端末それぞれで、ローカル コンピューターの「信頼されたルート証明機関」ストアにルート CA の証明書が正しくインポートされていることを確認します。</span><br><span class="line">また、中間 CA が存在する場合には、同様に「中間証明機関」ストアに中間 CA の証明書が正しくインポートされていることを確認してください。</span><br><span class="line">証明書チェーンを正常に検証できる必要があります。</span><br><span class="line"></span><br><span class="line">また、AD FS サーバーにおいては、NT Auth ストアにクライアント証明書を発行した CA の証明書 (ルート CA の証明書、もしくは中間 CA から発行している場合には中間 CA の証明書) がインポートされている必要があります。</span><br><span class="line">AD CS のエンタープライズ CA を利用している場合、既定で NT Auth ストアに CA の証明書がインポートされますが、他ドメインの CA や公的な証明機関から発行した証明書を使用する場合、明示的にインポートする必要があります。</span><br><span class="line">NT Auth ストアに証明書をインポートするには、ドメインの管理者権限でコマンドプロンプトを起動し、以下のコマンドを実行します。</span><br><span class="line">AD FS サーバーなど、DC に接続できるサーバー上で実行します。</span><br></pre></td></tr></table></figure></p><p>certutil -dspublish -f &lt;クライアント証明書を発行した CA の証明書 (xxxx.cer) のフルパス&gt; NTAuthCA<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NT Auth ストアにインポートされている証明書を確認する場合には、以下のコマンドを実行します。</span><br></pre></td></tr></table></figure></p><p>certutil -store -enterprise ntauth<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">### (4) AD FS サーバー、WAP サーバーから CDP (失効リスト配布ポイント) にアクセスできることを確認します。</span><br><span class="line"></span><br><span class="line">クライアント証明書の 「詳細」 タブから、証明書の CDP を確認することができます。</span><br><span class="line"></span><br><span class="line">&#123;% asset_img adfs_cba_02.jpg %&#125; </span><br><span class="line"> </span><br><span class="line">証明書の CDP を確認し、ADFS / WAP サーバー上で IE を起動し、該当の URL にアクセスできるかどうかを確認します。</span><br><span class="line">IE から正常にアクセスできる場合でも、実際の失効確認の動作時には WinHTTP プロキシを経由するため、 WinHTTP プロキシが構成されていないことで CDP へのアクセスに失敗している可能性があります。</span><br><span class="line"></span><br><span class="line">WinHTTP プロキシの設定状況については、次のコマンドで確認が可能です。</span><br></pre></td></tr></table></figure></p><p>netsh winhttp show proxy</p><p>現在の WinHTTP プロキシ設定:<br>   直接アクセス (プロキシ サーバーなし)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">インターネット接続にプロキシが必要な環境では、適切にプロキシを設定しておく必要があります。</span><br><span class="line">IE のインターネット オプションの設定を合わせるためには、以下のコマンドを実行します。</span><br></pre></td></tr></table></figure></p><p>netsh winhttp import proxy source=ie</p><p>現在の WinHTTP プロキシ設定:<br>   プロキシ サーバー: proxy_address:8080<br>   バイパス一覧     : test.com;*.test.com;sts.federation.com;<local><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### CDP に HTTP のパスが含まれない場合</span><br><span class="line"></span><br><span class="line">証明機関として Windows の AD CS で構成したエンタープライズ CA を利用している場合、CDP は証明機関の設定で行いますが、既定では AD 上に格納され、LDAP のパスになります。</span><br><span class="line">この既定の状態ですと、AD FS は必ずドメイン メンバーになりますので問題はありませんが、WAP サーバーをドメインに参加させていない構成では、この LDAP のパスにはアクセスすることができません。</span><br><span class="line"></span><br><span class="line">WAP サーバーがドメインに参加していない場合には、http でも CDP にアクセスできるように構成しておく必要があります。</span><br><span class="line">具体的には次のとおり、クライアント証明書を発行する証明機関のプロパティの 「拡張機能」タブで設定します。</span><br><span class="line"></span><br><span class="line">&#123;% asset_img adfs_cba_03.jpg %&#125; </span><br><span class="line"></span><br><span class="line">注意点として、この設定を行う前に発行された証明書には、ここで設定した http の CDP が含まれていません。</span><br><span class="line">設定変更を行った後に、再度クライアント証明書を発行する必要があります。</span><br><span class="line"></span><br><span class="line">#### エンタープライズ CA ではなく、公的機関から発行された証明書を利用する場合</span><br><span class="line"></span><br><span class="line">エンタープライズ CA から発行された証明書の場合には、既定の状態であれば AD FS はドメイン メンバーのため、 LDAP で CDP にアクセスできます。</span><br><span class="line">しかし、公的機関から発行された証明書を利用する場合、一般的に CDP にアクセスするためにはインターネット接続が必要です。</span><br><span class="line">その際、AD FS は WinHTTP Proxy 以外にも、AD FS サービスアカウントの WinINET Proxy を利用します。</span><br><span class="line">CDP が AD 上ではなく、インターネット接続が必要になる場合、AD FS サービスアカウントのコンテキストで IE のインターネットオプションから Proxy を適切に設定してください。</span><br><span class="line"></span><br><span class="line">### (5) 失効確認を無効化して動作を確認します。</span><br><span class="line"></span><br><span class="line">上記を確認しても動作が変わらない場合、一旦失効確認を無効化することは有効な切り分けです。</span><br><span class="line">もし無効化して動作するようになった場合には、明らかに失効確認が問題であることが確認でき、調査、対応を失効確認の動作に絞ることができます。</span><br><span class="line">特に、AD CS のエンタープライズ CA を利用している場合には、 WAP サーバーで失効確認が失敗しやすい (CDP が LDAP パスに設定されているため失敗しているケースが多い) ので、最初に WAP サーバーで無効化することをお奨めします。</span><br><span class="line">(A) の対応でもご紹介しましたが、失効確認は netsh コマンドで確認、無効化 (有効化) することができます。</span><br></pre></td></tr></table></figure></local></p><p>netsh http show sslcert<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">管理者権限で上記のコマンドをコマンドプロンプトから実行すると、いくつか SSL のバインドの情報が表示されるかと思います。</span><br><span class="line">その中で、証明書認証に利用する 【フェデレーションサービス名】:49443 の情報を確認します。</span><br><span class="line">(AD FS 2016 以降では、環境によっては 49443 ポートではなく、certauth.【フェデレーションサービス名の FQDN】:443】である可能性もあります。)</span><br><span class="line"></span><br><span class="line">以下は、フェデレーションサービス名が sts.test.com である場合の実行結果例です。</span><br></pre></td></tr></table></figure></p><p>netsh http show sslcert</p><p>Hostname:port               : sts.test.com:49443 ★&lt;&lt;&lt; ポート49443 に関する設定です。こちら確認します。<br>Certificate Hash             : 47b90e1e818ba8cf431d404fff232f1ba17bf078 ★ &lt;&lt;&lt; SSL サーバー証明書に対して一意で、環境によって異なります。<br>Application ID               : {5d89a20c-beab-4389-9447-324788eb944a} ★ &lt;&lt;&lt; AD FS サービスを示すもので、全環境で同一です。<br>Certificate Store Name       : MY<br>Verify Client Certificate Revocation : Enabled ★ &lt;&lt;&lt; 既定では、クライアント証明書の失効確認が有効 (Enabled) になっています。<br>Verify Revocation Using Cached Client Certificate Only : Disabled<br>Usage Check                 : Enabled<br>Revocation Freshness Time   : 0<br>URL Retrieval Timeout       : 0<br>Ctl Identifier               : (null)<br>Ctl Store Name               : (null)<br>DS Mapper Usage             : Disabled<br>Negotiate Client Certificate : Enabled<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">失効確認を無効化する手順を、以下にご紹介します。</span><br><span class="line">&lt;br&gt;</span><br><span class="line">1.管理者権限でコマンドプロンプトを起動し、現状の 49443 ポートの SSL バインドを一旦削除します。</span><br></pre></td></tr></table></figure></p><p>netsh http delete sslcert hostnameport=sts.test.com:49443</p><p>※ hostnameport には、お客様の環境で確認した値を指定します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2.続いて以下のコマンドを実行し、失効確認を無効化してSSL バインドを設定します。</span><br></pre></td></tr></table></figure></p><p>netsh http add sslcert hostnameport=sts.testcom:49443 certhash=47b90e1e818ba8cf431d404fff232f1ba17bf078 appid={5d89a20c-beab-4389-9447-324788eb944a} certstorename=MY verifyclientcertrevocation=disable</p><p>※ hostnameport、certhash には、お客様の環境で確認した値を指定します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3.続いて以下のコマンドを実行し、クライアント証明書の失効確認が無効化されていることを確認します。</span><br></pre></td></tr></table></figure></p><p>netsh http show sslcert</p><p>Hostname:port               : sts.test.com:49443<br>Certificate Hash             : 47b90e1e818ba8cf431d404fff232f1ba17bf078<br>Application ID               : {5d89a20c-beab-4389-9447-324788eb944a}<br>Certificate Store Name       : MY<br>Verify Client Certificate Revocation : Disabled ★ &lt;&lt;&lt; 失効確認が無効化されています。<br>Verify Revocation Using Cached Client Certificate Only : Disabled<br>Usage Check                 : Enabled<br>Revocation Freshness Time   : 0<br>URL Retrieval Timeout       : 0<br>Ctl Identifier               : (null)<br>Ctl Store Name               : (null)<br>DS Mapper Usage             : Disabled<br>Negotiate Client Certificate : Enabled<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">もしこの状態で証明書認証が動作するようになった場合、サーバーの失効確認に失敗している状況と明確に判断することができます。</span><br><span class="line"></span><br><span class="line">### (6) 失効リストを公開し直し、キャッシュを削除します。</span><br><span class="line"></span><br><span class="line">失効リストの有効期限が切れていたり、サーバー上の CRL キャッシュが古く、正常に動作しないケースがあります。</span><br><span class="line">CDP にアクセスできることを確認している場合には、失効リストの更新、キャッシュの削除をお試しください。</span><br><span class="line">AD CS のエンタープライズ CA では、以下の 「失効した証明書」 の 「すべてのタスク」 から公開することができます。</span><br><span class="line"></span><br><span class="line">&#123;% asset_img adfs_cba_04.jpg %&#125; </span><br><span class="line"></span><br><span class="line">上記手順で CRL を公開しましたら、AD FS、WAP サーバー上で CRL のキャッシュを削除します。</span><br><span class="line">CRL キャッシュには、ストレージ上に保存されるもの、メモリ内に保持されるものの 2 種類があり、それぞれ削除する方法を以下にご紹介します。</span><br><span class="line"></span><br><span class="line">ストレージ上のキャッシュを削除するためには、以下の各フォルダ内のファイルを削除してください。</span><br><span class="line">フォルダは削除しないようにしてください。</span><br></pre></td></tr></table></figure></p><p>C:\Windows\ServiceProfiles\NetworkService\AppData\LocalLow\Microsoft\CryptnetFlushCache\MetaData<br>C:\Windows\ServiceProfiles\NetworkService\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content<br>C:\Windows\ServiceProfiles\NetworkService\AppData\LocalLow\Microsoft\CryptnetUrlCache\MetaData<br>C:\Windows\System32\config\systemprofile\AppData\LocalLow\Microsoft\CryptnetFlushCache\MetaData<br>C:\Windows\System32\config\systemprofile\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content<br>C:\Windows\System32\config\systemprofile\AppData\LocalLow\Microsoft\CryptnetUrlCache\MetaData<br>C:\Windows\SysWOW64\config\systemprofile\AppData\LocalLow\Microsoft\CryptnetFlushCache\MetaData</p><p>※ ファイルが存在しない場合、フォルダが存在しない場合は、対応不要です。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">次にメモリ内に保持されるキャッシュは、以下のコマンドで削除します。</span><br></pre></td></tr></table></figure></p><p>certutil -setreg chain\ChainCacheResyncFiletime @now<br><code>`</code></p><p>※ コマンドを実行するためには、ローカル管理者権限が必要です。<br>※ コマンドを実行した後にCertSvc サービスの再起動を求められますが、実際には不要です。サービス再起動の必要はありません。</p><p>いかがでしたでしょうか。<br><br><br><br>AD FS の証明書認証をトラブルシューティングするケースでは、上記のとおり様々な確認観点があり、すべての観点を確認するための資料を一まとめに取得しようとすると、非常に大変です。<br>今回ご紹介した確認ポイント、切り分けを実施していただくことで、解決に至ったり、調査のポイントを絞り込むことができますので、ぜひ活用いただければ幸いです。<br><br><br><br>上記内容が少しでも参考となりますと幸いです。<br><br><br><br><br><br>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。<br><br><br><br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identitiy サポートチームの竹村です。&lt;br&gt;今回は、多くのお客様からお問合せをいただく AD FS のクライアント証明書認証の問題について、既知の事例や対応方法をご紹介します。&lt;/p&gt;
&lt;h2 id=&quot;最初に行うこと&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="AD FS" scheme="https://jpazureid.github.io/tags/AD-FS/"/>
    
      <category term="トラブルシューティング" scheme="https://jpazureid.github.io/tags/%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/"/>
    
      <category term="CBA" scheme="https://jpazureid.github.io/tags/CBA/"/>
    
      <category term="証明書認証" scheme="https://jpazureid.github.io/tags/%E8%A8%BC%E6%98%8E%E6%9B%B8%E8%AA%8D%E8%A8%BC/"/>
    
  </entry>
  
  <entry>
    <title>多要素認証 (MFA) のリセット手順</title>
    <link href="https://jpazureid.github.io/azure-active-directory/mfa-reset/"/>
    <id>https://jpazureid.github.io/azure-active-directory/mfa-reset/</id>
    <published>2018-10-14T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.257Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの小野です。</p><p>今回は、Azure AD における多要素認証 (Multi-Factor Authentication = MFA) のリセット手順についてご紹介します。</p><p>Azure AD では、ログイン時の追加認証方式として電話・スマートフォンアプリなどを使った多要素認証 (Multi-Factor Authentication = MFA) を利用することができ、パスワードのセルフサービス リセット時にも同様の認証方式を利用させることが可能です。MFA の設定を有効にしている場合、Azure AD にログインをするためには認証方法に指定したスマートフォンなどを利用できる必要がありますが、スマートフォンを紛失してしまった場合や電話番号が無効になった場合などには、MFA で設定していた認証を利用できない状況となり、ユーザー認証を完了することができずサービスを利用することができなくなります。<br>このような場合は、Azure AD  の管理者による対象ユーザーのMFA 設定のリセットを実施します。</p><p>なお、一般ユーザー権限では他ユーザーのMFA 認証設定のリセットは行うことができません。一般ユーザーは 、ログインができる状態であればユーザー自身で登録されている MFA の設定を変更することはできますが、MFA の追加の認証を受け取れるスマートフォンを紛失したなどの場合に、自ら MFA 設定のリセットを行うことはできません。</p><p>MFA のリセットは、Azure Portal またはPowerShell より行うことが可能です。Azure Portal からの操作では事前準備が不要なため、すぐに操作を実施することができます。PowerShell からの操作では、CSV 形式で用意した全ユーザーに対してリセットを行うことができるため、多くのユーザーに対し一括でリセットを行いたい場合に有効です。</p><h2 id="Azure-Portal-での手順"><a href="#Azure-Portal-での手順" class="headerlink" title="Azure Portal での手順"></a>Azure Portal での手順</h2><ol><li><p>多要素認証設定画面へアクセスします。</p><p> 全体管理者でAzure Portal へログイン後、[すべてのサービス] &gt; [Azure Active Directory] &gt; [ユーザー] &gt; [Multi-Factor Authentication] を選択します。</p></li><li><p>多要素認証設定画面にて該当のユーザーにチェックをつけ、”ユーザー設定の管理”を選択します。</p> <img src="/blog/azure-active-directory/mfa-reset/mfa-config-1.png"></li><li><p>“選択したユーザーについて連絡方法の再指定を必須にする” にチェックし、”保存” を選択します。</p> <img src="/blog/azure-active-directory/mfa-reset/mfa-config-2.png"></li></ol><p>この後、上記操作が行われたユーザーがサインインしようとすると、MFA のセットアップ画面が表示されます。ユーザーは、新しく電話・スマートフォンアプリ・メールなどを使用して、多要素認証を構成できます。</p><h2 id="PowerShell-での手順"><a href="#PowerShell-での手順" class="headerlink" title="PowerShell での手順"></a>PowerShell での手順</h2><p>コマンドを実行する前に、MSOnline モジュールのインストールが必要となります。MSOnline モジュールのインストール方法は、下記ブログをご参照ください。</p><p><a href="https://blogs.technet.microsoft.com/jpazureid/2017/12/04/aad-powershell/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2017/12/04/aad-powershell/</a></p><p>以下コマンドを実行し、ユーザーの MFA 設定をリセットできます。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Connect-MsolService＃Azure AD へログイン</span><br><span class="line">Set-MsolUser -UserPrincipalName &quot;&lt;リセットしたいユーザーのUPN&gt;&quot; -StrongAuthenticationMethods @()</span><br></pre></td></tr></table></figure><p>例えば、以下のようにCSV からユーザーを読み込んで、一括でリセットを行うことも可能です。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Connect-MsolService＃Azure AD へログイン</span><br><span class="line">$users = Import-Csv &quot;CSV のファイルパス&quot;</span><br><span class="line">foreach ($user in $users) &#123;</span><br><span class="line">    Set-MsolUser -UserPrincipalName $user.UserPrincipalName -StrongAuthenticationMethods @()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/blog/azure-active-directory/mfa-reset/csv.png">  <p>図: 用意する CSV の例</p><p>以下のコマンドで、MFA の設定がされていない（リセット済み）であるユーザーの一覧を確認することができます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-MsolUser  -all | ?&#123; !$_.StrongAuthenticationMethods &#125;</span><br></pre></td></tr></table></figure><p>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。上記内容が少しでも皆様の参考となりますと幸いです。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの小野です。&lt;/p&gt;
&lt;p&gt;今回は、Azure AD における多要素認証 (Multi-Factor Authentication = MFA) のリセット手順についてご紹介します。&lt;/p&gt;
&lt;p&gt;Azu
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Connect - ディレクトリ同期の応用 – オブジェクト間の属性値の移動</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/move-attribute-values-between-objects/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/move-attribute-values-between-objects/</id>
    <published>2018-10-10T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.377Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Identity チームの金森です。<br>今回は Azure AD Connect (AADC) ツールを利用している環境で “オンプレミス AD ユーザー B にセットしたメール アドレス値が同期先 AAD ユーザーに反映されない” という事象について AADC の動作仕様を元に解説します。<br>今回 AADC の動作についての応用編となりますので、先に基本的な考え方については、以下の Blog もぜひご参照いただけたら嬉しいです。</p><p>Azure AD Connect : ディレクトリ同期の基本的なポイント<br><a href="https://blogs.technet.microsoft.com/jpazureid/2018/05/09/synchronization-basic-point/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2018/05/09/synchronization-basic-point/</a></p><p>まず、AADC の基本的な動作を整理します。</p><ul><li>AADC は、オンプレミス AD と AAD 間の [中間データベース] の位置づけとなり、オンプレミス AD と AAD のディレクトリに対して、それぞれに対応した Connector と呼ばれるモジュールを作成して対話を行います。</li><li>Connector は通信対象ディレクトリとやり取りするデータを、Connector Space (CS) と呼ばれるデータベースに一時的に格納 (ステージング) します。</li><li>CS のデータを元に [あるオブジェクトがそれぞれのディレクトリに対してどのようなデータを持つか] という統合されたオブジェクト データが生成され、このデータは Metaverse (MV) と呼ばれるデータベースに格納されます</li></ul><p>以上の動作は既定では30分毎に行われており、これは次のような流れで行われます。<br>Synchronization Service Manager での表示は下から上へ、となります。</p><ol><li>Delta or Full Import : オンプレ AD からオブジェクト情報を Import する処理 (AD 用 CS にステージング)</li><li>Delta or Full Import : AAD からオブジェクト情報を Import する処理 (AAD 用 CS にステージング)</li><li>Delta or Full Synchronization : オンプレ AD 用 CS のデータを MV と同期して更新する</li><li>Delta or Full Synchronization : AAD 用 CS のデータを MV と同期して更新する</li><li>Export : 現在の MV のデータを元に更新された AAD 用 CS のデータを AAD へ Export する処理</li><li>Export : 現在の MV のデータを元に更新されたオンプレ AD 用 CS のデータをオンプレ AD へ Export する処理</li></ol><p>AADC の管理画面である Synchronization Service Manager で見た場合のイメージを以下に示します。<br> </p><h2 id="同期済みユーザーの属性を変更する際の動作について"><a href="#同期済みユーザーの属性を変更する際の動作について" class="headerlink" title="同期済みユーザーの属性を変更する際の動作について"></a>同期済みユーザーの属性を変更する際の動作について</h2><p>ここからは冒頭で記載しました同期済みのユーザーの属性を変更したが反映されないという事象について解説していきます。今回は、具体的にお問い合わせをいただきましたメール アドレスを例として、オンプレミス AD ユーザー A に設定されたメール アドレスをユーザー B に付け替えるようなケースを元に説明していきます。<br>ここで先に AADC の同期動作を考える上で大事な特徴を挙げておきます。</p><p><strong>ポイント : 1回の同期で [1 つの値] を [複数オブジェクト間で削除/追加] した場合、<span style="color: red; ">タイミングによっては</span>追加した値が AAD ユーザー側に同期されない場合がある</strong></p><p>この特徴を念頭に AADC で属性を変更する際の留意点を言ってしまうと<span style="color: red; "><strong>削除する情報を先に AAD に同期して、追加する情報は後から同期しましょう</strong></span>ということになるのですが、その心を説明します。<br>例えば、以下のような運用処理が行われたとします。</p><ul><li>オンプレミス AD ユーザー A を [旧 AD ユーザー] とします。</li><li>オンプレミス AD ユーザー B を [新 AD ユーザー] とします。</li><li>それぞれの AD ユーザーに呼応して、AAD 側にも2つの新旧ユーザー オブジェクトが同期により作成されています。</li><li>[旧 AD ユーザー] が使用していたメール アドレスを [新 AD ユーザー] に使用させたいような状況が生じました。</li></ul><p>この場合、オンプレミス AD 側では以下 2 つの操作を行います。</p><p>a. 旧 AD ユーザーのメール アドレス (mail) 属性をダミー値に変更 (null としても良いですが、今回はダミー値に変更することを前提で話を進めます)<br>b. 新 AD ユーザーのメール アドレス (mail) 属性に、旧 AD ユーザーが使用していたアドレス値をセット</p><p>上記 a、b の変更を 1 回のディレクトリ同期で処理した場合、AAD に向けて同期されるオブジェクトの順序によっては、新 AAD ユーザーに変更が反映しない場合があります。</p><p>前述の同期処理の [5. の AAD への Export] 時に a と b の処理を AAD に反映させる処理が試みられますが、a と b のどちらの処理が先に行われるかは担保されません。このとき b の処理 (新 AAD ユーザー オブジェクトへの同期) が先に行われると、新 AAD ユーザーに反映したかったメール アドレスが旧 AD ユーザーで利用されているために更新が行われず、結果として a の処理のみが行われて b の処理が行われません。この状況をもう少し詳しく記載したのが下図になります。<br>  </p><p>このような状態になった場合、<span style="color: green; ">“次回の同期で新 AD ユーザーの mail 属性値が改めて新 AAD の mail 属性に更新されるのでは？” </span>と考える方もいるかもしれません。<br>しかし、次回の同期時には <span style="color: green; ">AD からの Import において、AADC の MV 情報は何も更新されないため、AADC は AAD に改めて Export すべき更新が無い</span>と判断します。<br>つまり、次回同期でも新 AD ユーザーの mail 属性値は更新されず Null のままとなりオンプレミス AD の情報とも不整合が生じた状態となります。</p><p>この場合の対処としては、オンプレミス AD にて新 AD ユーザーの mail 属性値を変更して同期を行い、再度目的の値に戻して同期を行います。具体的な作業は次のとおりです。</p><ul><li>新 AD ユーザーの mail 属性に一時的な値 (<a href="mailto:username-temp@contoso.com" target="_blank" rel="noopener">username-temp@contoso.com</a> 等) をセットする</li><li>この状態で一度 AADC による同期を行い、一時的なメール アドレス値を新 AAD ユーザーの mail 属性に反映させる</li><li>改めて新 AD ユーザーの mail 属性に本来セットしたかった値 (<a href="mailto:username@contoso.com" target="_blank" rel="noopener">username@contoso.com</a> 等) をセットする</li><li>再度 AADC による同期を行い、本来の目的であるメール アドレス値を新 AAD ユーザーの mail 属性に反映させる</li></ul><p>そもそものお話として、上記のような症状が発生することが無いよう<span style="color: red; "><strong>削除する情報を先に AAD に同期して、追加する情報は後から同期する</strong></span>運用をぜひ留意いただければ幸いです。<br>以下の技術情報でも、AADC のアーキテクチャに関する情報を公開しておりますので、興味を持っていただけた方はぜひ併せてご参照ください。</p><p>Azure AD Connect sync: アーキテクチャの概要<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/concept-azure-ad-connect-sync-architecture" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/concept-azure-ad-connect-sync-architecture</a></p><p>上記内容が皆様の参考となりますと幸いです。どちら様も素敵な AAD ライフをお過ごしください。</p><p>ご不明な点等がありましたら、ぜひ弊社サポート サービスをご利用ください。<br>※本情報の内容（リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。Azure Identity チームの金森です。&lt;br&gt;今回は Azure AD Connect (AADC) ツールを利用している環境で “オンプレミス AD ユーザー B にセットしたメール アドレス値が同期先 AAD ユーザーに反映されない” という事象に
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Azure AD Connect - 2018/11/7 以降 AADC 1.0.8641.0 以前では Password Writeback が利用できない</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/cantphsback-aadc/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/cantphsback-aadc/</id>
    <published>2018-10-08T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.345Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Identity チームの金森です。<br>今回は Azure AD Connect (AADC) をご利用いただいている皆様に急ぎお伝えしたい情報がございます。  </p><p>先に結論ですが、表題の通り <strong>AADC 1.0.8641.0 とそれ以前のバージョンをご利用の環境において 2018/11/7 以降は  Password Writeback が機能しなくなります</strong>。</p><p>理由として、AADC 1.0.8641.0 以前のバージョンでは、Password Writeback を実現するために ACS (Access Control Service) を利用していました。<br><strong>ACS が 2018/11/7 に完全リタイア</strong>するのですが、ACS の機能が提供されなくなることで、AADC 1.0.8641.0 以前をご利用の環境で Password Writeback が動作しなくなります。なお、それ以降のバージョンについては特に影響はありませんのでご安心ください。</p><p>How-to: Configure password writeback<br><a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-sspr-writeback" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-sspr-writeback</a></p><img src="/blog/azure-active-directory-connect/cantphsback-aadc/ACSretire.jpg"><p>ACS のリタイアに関しては、昨年から情報を公開しておりましたので準備を進めていただいている方も多いかもしれませんが、今回は ACS 対応のアプリケーションを他に利用しているか否かは関係しません。</p><p>How to: Migrate from the Azure Access Control service<br><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-acs-migration" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-acs-migration</a><br>ACS の移行スケジュール<br><a href="https://blogs.technet.microsoft.com/jpazureid/2017/12/29/acs-migration/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2017/12/29/acs-migration/</a></p><p>AADC のバージョン 1.0.8641.0 は 2015 年 6 月に公開されており、<strong>すでに公開から 3 年以上が経過</strong>しています。<br>AADC のバージョン情報は以下のとおりですが、本 Blog 執筆時点 (2018 年 10 月) の最新バージョンは 1.1.882.0 となります。</p><p>Azure AD Connect: Version release history<br><a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/reference-connect-version-history" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/active-directory/hybrid/reference-connect-version-history</a></p><p>AADC はディレクトリ同期ツールとしては3代目の製品となります。<br>DirSync, ADSync ツールを経て AADC へと進化し、機能追加と修正は現在までほぼ 1～2 カ月に 1 回のペースで行われ、最新バージョンを提供してきています。</p><p>DirSync &amp; ADSync – 2017/12/31 で終了のお知らせ<br><a href="https://blogs.technet.microsoft.com/jpazureid/2017/11/02/dirsync-adsync-20171231-で終了のお知らせ/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2017/11/02/dirsync-adsync-20171231-で終了のお知らせ/</a></p><p>AADC のどのバージョンをご利用いただいていても、2018 年 10 月時点ではサポート対象となりますが、Password Writeback をご利用いただくためには 1.0.8641.0 よりも後のバージョンが必須となりますのでご注意ください。<br>なお、AADC は前述の通りすべてのバージョンがサポート対象ですが、弊社としては<strong>半年以内のバージョンのご利用</strong>を強く推奨します。機能追加と修正を 1 ～ 2 カ月に 1 回程度のペースで行っていますので Windows OS のマンスリー修正のようにお考えいただければと思います。</p><p>AADC のアップグレード手順に関しても、Blog にて紹介しておりますのでこちらも参考としていただけると幸いです。</p><p>Azure AD Connect アップグレード手順<br><a href="https://blogs.technet.microsoft.com/jpazureid/2018/08/10/azure-ad-connect-upgrade/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2018/08/10/azure-ad-connect-upgrade/</a></p><p>なお、いきなり 3 年分のバージョンアップを行っても問題ないか心配… という方もいらっしゃると思います。<br>そんな時には現在 Active な AADC サーバーを直接アップグレードせず、スウィング移行という方式を取ることも可能です。</p><p>Azure AD Connect: 旧バージョンから最新バージョンにアップグレードする<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-upgrade-previous-version" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-upgrade-previous-version</a><br>-&gt;こちらの [スウィング移行] が対象となります。</p><p>詳細はぜひ上記の技術情報をご参照いただければと存じますが、スウィング移行の考え方をざっくりとおまとめすると以下のようになります。</p><ol><li>現在ご利用中の Active な AADC サーバーの他に、もう 1 台サーバーを用意する  </li><li>用意したサーバーに最新の AADC を [ステージング モード] で構成する  </li><li>ステージング モード (Import と Sync 処理のみ行い、Export 処理を行わないので既存環境への影響なし) の同期予定のデータを確認する  </li><li>最終的に Active な AADC をステージングに、ステージングの AADC を Active に切り替える<br>この中で、3. の [ステージング状態にある AADC サーバーの同期予定のデータの正常性 (既存の同期オブジェクトが失われたりしないか) の確認] は、前述の技術情報にもリンクがある以下の手順 (CSExportAnalyzer) を使用することで事前に確認することが可能です。</li></ol><p>Azure AD Connect Sync: 操作タスクおよび考慮事項<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-connect-sync-operations#verify" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-connect-sync-operations#verify</a><br>-&gt;確認、の項目が対象です。</p><p>ステージング状態の AADC サーバーにて CSExportAnalyzer を使用して [現在の同期済みオブジェクトと、これから (ステージングを解除したら) 同期される予定のオブジェクトを比較して差分を確認] します。<br>ここで差分が何もない (ステージングを解除して同期を行っても何も変化がない) とご安心いただけるかと思いますが、仮に 1.0.8641.0 から最新 (執筆時点で 1.1.882.0) にアップグレードした場合、機能改善が行われているため差分が生じます。<br>これは前述のバージョン履歴にも記載されている実装変更が行われているためとなり、例えば以下のような差分が検出されることが予想され、これは期待された結果であり差分があっても問題ではありません。</p><p>ユーザー オブジェクト  </p><ul><li>employeeID 属性が (オンプレ AD オブジェクトに定義されている場合) 同期対象になる : 1.1.524.0 の機能変更  </li><li>photo 属性がオンプレ AD オブジェクトに定義されていても同期対象外になる : 1.1.524.0 の機能変更  </li><li>userCertificate, userSMIMECertificate 属性に 15 個以上の値が定義されている場合、同期対象外になる : 1.1.524.0 の機能変更  </li><li>OnPremisesDistinguishedName 属性が AAD に同期されるようになる : 1.1.553.0 の機能変更  </li><li>altRecipient 属性が (オンプレ AD オブジェクトに定義されている場合) 同期対象になる : 1.1.553.0 の機能変更  </li></ul><p>グループ オブジェクト  </p><ul><li>msExchBypassModerationLink 属性が (オンプレ AD オブジェクトに定義されている場合) 同期対象になる : 1.1.524.0 の機能変更  </li><li>OnPremisesSamAccountName 属性が AAD に同期されるようになる : 1.1.553.0 の機能変更  </li><li>NetBiosName 属性が AAD に同期されるようになる : 1.1.553.0 の機能変更  </li><li>DnsDomainName 属性が AAD に同期されるようになる : 1.1.553.0 の機能変更  </li></ul><p>連絡先オブジェクト  </p><ul><li>userCertificate, userSMIMECertificate 属性に 15 個以上の値が定義されている場合、同期対象外になる : 1.1.524.0 の機能変更</li></ul><p>デバイス オブジェクト  </p><ul><li>AAD へのデバイス オブジェクト同期対象として、同期元 AD オブジェクトの userCertificate に値が入っていることが条件になる : 1.1.553.0 の機能変更</li></ul><p>上記内容が皆様の参考となりますと幸いです。どちら様も素敵な AAD ライフをお過ごしください。  </p><p>ご不明な点等がありましたら、ぜひ弊社サポート サービスをご利用ください。<br>※本情報の内容（リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。Azure Identity チームの金森です。&lt;br&gt;今回は Azure AD Connect (AADC) をご利用いただいている皆様に急ぎお伝えしたい情報がございます。  &lt;/p&gt;
&lt;p&gt;先に結論ですが、表題の通り &lt;strong&gt;AADC 1.0.864
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>条件付きアクセスの基本的な考え方</title>
    <link href="https://jpazureid.github.io/azure-active-directory/conditional-access-basuc/"/>
    <id>https://jpazureid.github.io/azure-active-directory/conditional-access-basuc/</id>
    <published>2018-09-26T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.186Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの栗井です。</p><p>この記事では条件付きアクセスポリシー設定の基本的な考え方について解説します。</p><h2 id="条件付きアクセスの基本的な考え方は、アクセスを制限すること"><a href="#条件付きアクセスの基本的な考え方は、アクセスを制限すること" class="headerlink" title="条件付きアクセスの基本的な考え方は、アクセスを制限すること"></a>条件付きアクセスの基本的な考え方は、アクセスを制限すること</h2><p>条件付きアクセスポリシーは、アクセスを許可する条件の設定ではなく、アクセスをブロック / または制限 (特定の条件を満たさなければブロック) する条件を設定します。</p><p>基本的にはすべてのアクセスが許可された状態で、「ブロック、もしくは制御したいアクセスパターンのブラックリストを作成する」とイメージすると、分かりやすいかもしれません。条件付きアクセスポリシーを 1つも設定していない場合や、それぞれのポリシーの「割り当て」で設定した対象に合致しない場合は、特に制限無くアクセスできる動作となります。ポリシーの「割り当て」で設定した対象に合致した場合には、「アクセス制御」で設定した内容が適用されます。</p><p>例えば、アクセスがブロックされたり、あるいは 多要素認証が要求されるなど、アクセスするための制限が加わります。</p><h2 id="条件付きアクセスのポリシーに、順序による優先順位はありません"><a href="#条件付きアクセスのポリシーに、順序による優先順位はありません" class="headerlink" title="条件付きアクセスのポリシーに、順序による優先順位はありません"></a>条件付きアクセスのポリシーに、順序による優先順位はありません</h2><p>条件付きアクセスポリシーを複数定義した場合、定義した順番 (画面表示上の上下) で優先順位はありません。すべてのポリシーが評価対象であり、以下のように動作します。</p><ul><li>どれか１つのポリシーでブロックの対象となった場合、アクセスはブロックされます。</li><li>複数のポリシーでアクセスを制限された場合、すべての条件を満たさないかぎり、アクセスはブロックされます。</li><li>どのポリシーの対象にもならない場合、あるいはすべての条件を満たした場合、アクセスが許可されます。</li></ul><h2 id="条件付きアクセスのポリシーの設定とアクセス可否の図"><a href="#条件付きアクセスのポリシーの設定とアクセス可否の図" class="headerlink" title="条件付きアクセスのポリシーの設定とアクセス可否の図"></a>条件付きアクセスのポリシーの設定とアクセス可否の図</h2><p>以下に、条件付きアクセスのポリシーの設定とアクセス可否の関係を簡潔なチャートで示します。</p><ol><li><p>ポリシーの「割り当て」に該当するか</p><p> 最初に、ポリシーの割り当て対象に該当するかどうかが評価されます。割り当て対象に該当しない場合は、アクセスは許可されます。割り当て対象に該当する場合、以下の 2 の評価に続きます。</p></li><li><p>ポリシーの「アクセスのブロック」対象か「アクセス権の付与」対象か</p><p> すべてのポリシーには、「アクセスのブロック」「アクセス権の付与」のいずれかのコントロールが設定されています。「アクセスのブロック」が設定されている場合、アクセスはブロックされます。「アクセス権の付与」である場合、以下の 3 の評価に続きます。</p></li><li><p>「アクセス権の付与」条件を満たすかどうか</p><p> 「アクセス権の付与」のコントロールが設定されているポリシーでは、アクセス権の付与条件が少なくとも一つ以上設定されています。</p> </li></ol><p>この項目によって設定される条件を満たした場合、アクセスが許可されます。条件を満たさない場合には、アクセスはブロックされます。</p><p>上記の 1 から 3 の評価を、すべてのポリシーに対して行います。その中で、1つでもブロックの対象となるポリシーが存在する場合には、アクセスは許可されません。すべてのポリシーで「割り当て」が対象外、あるいは「アクセス権の付与」条件を満たした場合にのみ、アクセスすることができます。</p><h2 id="条件付きアクセスポリシー設定の例と挙動"><a href="#条件付きアクセスポリシー設定の例と挙動" class="headerlink" title="条件付きアクセスポリシー設定の例と挙動"></a>条件付きアクセスポリシー設定の例と挙動</h2><p>以下に、主な設定例をいくつか示します。</p><ul><li><p>ポリシーA</p>    <p>  「全体管理者以外のすべてのユーザーに対して、いずれのクラウドアプリにログインする場合にも、スマートフォン (iOS、Android、Windows Phone) からのアクセスを禁止したい」場合の設定です。</p></li><li><p>ポリシーB</p>  <p>  「特定のユーザーがアクセスする際に、多要素認証を要求したい」場合の設定です。</p></li><li><p>ポリシーA と B がどちらも適用されるアクセスの場合</p><p>  「アクセス権をブロック」 は 「アクセス権を付与する」 よりも強力にはたらくため、ポリシーA と B がどちらも適用されるアクセスはブロックされます。</p></li></ul><blockquote><p>注意<br>割り当て対象を「すべてのユーザー」「すべてのクラウドアプリ」といたしますと、管理者を含めてすべてのユーザーがポータルにアクセスできない状態となり、ポリシーを変更することもできない状況となります。<br>ポリシーを変更する管理者についてはアクセスできるように、対象外に該当のユーザーを登録してください。</p></blockquote><h2 id="関連サイト"><a href="#関連サイト" class="headerlink" title="関連サイト"></a>関連サイト</h2><p>条件付きアクセスに関する公式ドキュメントのリンクです。ぜひご覧ください。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/" target="_blank" rel="noopener">Azure AD の条件付きアクセスのドキュメント</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/overview" target="_blank" rel="noopener">Azure Active Directory の条件付きアクセスとは</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/conditions" target="_blank" rel="noopener">Active Directory 条件付きアクセスの条件の概要</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/best-practices" target="_blank" rel="noopener">Azure Active Directory の条件付きアクセスのベスト プラクティス</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/faqs" target="_blank" rel="noopener">Azure Active Directory の条件付きアクセスに関する FAQ</a><br>などの公式情報が公開されています。</li></ul><p><a href="/blog/azure-active-directory/qanda-conditional-access/">Japan Azure Identity Support Blog ：Azure AD の条件付きアクセスに関する Q&amp;A</a>)</p><p>上記内容が少しでも参考となりますと幸いです。製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの栗井です。&lt;/p&gt;
&lt;p&gt;この記事では条件付きアクセスポリシー設定の基本的な考え方について解説します。&lt;/p&gt;
&lt;h2 id=&quot;条件付きアクセスの基本的な考え方は、アクセスを制限すること&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD の ディレクトリロールが割り当てられたメンバーの一覧を取得したい</title>
    <link href="https://jpazureid.github.io/azure-active-directory/output-directory-roll-members/"/>
    <id>https://jpazureid.github.io/azure-active-directory/output-directory-roll-members/</id>
    <published>2018-09-12T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.282Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！ Azure &amp; Identity サポート チームの三浦 大です。</p><p>今回は Azure AD のディレクトリロールが割り当てられているユーザーの一覧を CSV で出力する PowerShell スクリプトをご紹介します。Azure AD はセキュリティの観点から、ディレクトリロールにて設定できるロールが細かく分類されております。各ロールのメンバーの一覧は、先日の <a href="/blog/./roles-and-administrators/">ブログ</a> で紹介しましたように、 Azure ポータルから参照することができます。</p><p>しかし、この一覧をファイルとして出力したいというご要望もあるかと思います。以下のとおり、ディレクトリロールの一覧を出力する PowerShell スクリプトを作成いたしましたので、ぜひご利用ください！</p><blockquote><p>実行に際しては、事前に Install-Module -Name MSOnline コマンドを実行し、 Azure AD PowerShell モジュールのインストールをお願いいたします。</p></blockquote><p>Azure AD PowerShell のインストールなどについては、以下の公開情報をご参照くださいませ。</p><p><a href="/blog/./powershell-module/">Azure Active Directory の PowerShell モジュール</a></p><h2 id="PowerShell-スクリプト"><a href="#PowerShell-スクリプト" class="headerlink" title="PowerShell スクリプト"></a>PowerShell スクリプト</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Import-Module MSOnline</span><br><span class="line">Connect-MsolService</span><br><span class="line"></span><br><span class="line">#任意の csv が出力されるディレクトリを設定してください。</span><br><span class="line"></span><br><span class="line">$outfile = &quot;C:\output.csv&quot;</span><br><span class="line">$dataList</span><br><span class="line">$data = New-Object PSObject | Select-Object DirectoryRole, User</span><br><span class="line">$role = Get-MsolRole</span><br><span class="line">$dataList = @()</span><br><span class="line"></span><br><span class="line">foreach ($test in $role) &#123;</span><br><span class="line">$member = Get-MsolRoleMember -RoleObjectId $test.objectid</span><br><span class="line">If ($null -eq $member) &#123;</span><br><span class="line">$role = $test.name</span><br><span class="line">Write-Output &quot;$role,&quot;</span><br><span class="line">$data = New-Object PSObject | Select-Object DirectoryRole, User</span><br><span class="line">$data.DirectoryRole = $role</span><br><span class="line">$data.User = $null</span><br><span class="line">$dataList += $data</span><br><span class="line">&#125; Else &#123;</span><br><span class="line">foreach ($m in $member) &#123;</span><br><span class="line">$role = $test.name</span><br><span class="line">$user = $m.EmailAddress</span><br><span class="line">Write-Output &quot;$role,$user&quot;</span><br><span class="line">$data = New-Object PSObject | Select-Object DirectoryRole, User</span><br><span class="line">$data.DirectoryRole = $role</span><br><span class="line">$data.User = $user</span><br><span class="line">$dataList += $data</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$DataList | Export-Csv $outfile -Encoding Default</span><br></pre></td></tr></table></figure><h2 id="出力結果の例"><a href="#出力結果の例" class="headerlink" title="出力結果の例"></a>出力結果の例</h2><p>スクリプトを実行すると資格情報が求められますので、出力対象の Azure AD テナントの全体管理者の資格情報を入力します。その後自動的に csv ファイルにロールの一覧が出力されます。以下は出力のサンプルです。</p><img src="/blog/azure-active-directory/output-directory-roll-members/output-directory-roll-member011.png"> <p>本ブログにて、管理者の方のご負担、少しでも軽減されれば幸甚です。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは！ Azure &amp;amp; Identity サポート チームの三浦 大です。&lt;/p&gt;
&lt;p&gt;今回は Azure AD のディレクトリロールが割り当てられているユーザーの一覧を CSV で出力する PowerShell スクリプトをご紹介します。Azure AD 
      
    
    </summary>
    
    
      <category term="Azure AD Directory Rolls" scheme="https://jpazureid.github.io/tags/Azure-AD-Directory-Rolls/"/>
    
  </entry>
  
  <entry>
    <title>テナント制限</title>
    <link href="https://jpazureid.github.io/azure-active-directory/tenant-restriction/"/>
    <id>https://jpazureid.github.io/azure-active-directory/tenant-restriction/</id>
    <published>2018-09-12T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.321Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！ Azure &amp; Identity サポート チームの三浦 大です。</p><p>今回はテナント制限の機能に関して、よくあるお問い合わせと、その回答をまとめさせていただきました。</p><h2 id="テナント制限とは"><a href="#テナント制限とは" class="headerlink" title="テナント制限とは"></a>テナント制限とは</h2><p>まず、テナント制限とは、 Azure AD に対する認証の通信をプロキシ経由させ、そのプロキシから送信されるデータに、アクセスを許可する Azure AD テナントの情報を付与しておくことで、それ以外の Azure AD テナントへのアクセスをブロックする機能を指しています。</p><p>詳細については、以下の公開情報をご参照ください。</p><p>自社テナント以外へのアクセス制御 – “テナントの制限” 機能 (Tenant Restrictions)<br><a href="https://blogs.technet.microsoft.com/office365-tech-japan/2017/02/06/tenant-restrictions/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/office365-tech-japan/2017/02/06/tenant-restrictions/</a></p><p>テナント制限が機能しており、アクセスを許可しないテナントの  Office 365 や Azure へのサインイン時に 「ここからアクセスすることはできません」 のエラーメッセージが表示されます。</p><img src="/blog/azure-active-directory/tenant-restriction/tenant-restrictions01.png"><p>以下にて、テナント制限に関連する、よくあるお問い合わせをまとめました。ぜひご参照ください！</p><h2 id="よくあるお問い合わせ"><a href="#よくあるお問い合わせ" class="headerlink" title="よくあるお問い合わせ"></a>よくあるお問い合わせ</h2><p><font color="DeepSkyBlue">Q</font> : MS アカウントを利用すると、制限の画面が表示されますが、回避策はありませんか？</p><p><font color="red">A</font> : MS アカウントを許可する場合には、以下をテナント制限の許可するリストに追加します。</p><p>(“Restrict-Access-To-Tenants” ヘッダーに含まれるようにします)</p><p>microsoftservices.onmicrosoft.com<br>MSARealms.onmicrosoft.com</p><p><font color="DeepSkyBlue">Q</font> : 制限されるのは Office 365 だけですか？</p><p><font color="red">A</font>  : いいえ。以下の認証エンドポイントを使用する、すべてのサービスが制限されます。</p><p>login.microsoftonline.com<br>login.windows.net<br>login.microsoft.com</p><p>例えば Azure ポータル、EA ポータルにアクセスする際も制限されます。また、ゲストユーザーの場合、招待されたテナントではなく、管理元のテナントで認証が行われるため、ゲストユーザーの招待元テナントも、テナント制限で許可する必要があります。</p><p><font color="DeepSkyBlue">Q</font> : (クライアントですが)、テナント制限によってアクセスできないテナントにアクセスできるようにしてほしい。</p><p><font color="red">A</font> : 接続元のクライアントが利用するプロキシサーバーの設定変更が必要です。プロキシ サーバーを管理している IT 部門へ申請をあげるなどで、テナント制限の許可するリストに該当のテナントを追加してもらってください。 </p><p><font color="DeepSkyBlue">Q</font> : Azure AD 側での設定変更は必要ですか？</p><p><font color="red">A</font> : いいえ。プロキシの設定のみで、テナント制限が機能します。</p><p><font color="DeepSkyBlue">Q</font> : “Restrict-Access-To-Tenants” に、ワイルドカードは利用できますか？</p><p><font color="red">A</font> : いいえ。テナント名かテナント ID を不足なく、入力する必要がございます。</p><p><font color="DeepSkyBlue">Q</font> : テナント制限で許可をすることができるテナント数に上限はありますか？</p><p><font color="red">A</font> : テナント制限にて、許可をするテナント数自体には上限は設けられていません。しかし、ヘッダーの長さの上限 (MaxFieldLength) と、リクエストとヘッダーを含めた合計のサイズの上限 (MaxRequestBytes) があるため、多数のディレクトリを追加する場合、この上限を超えないように注意が必要です。</p><p>※ テナント名の平均を 30 文字 (30 バイト) とすると、ヘッダーにはテナント名を約 2,000 個追加できます。</p><p>MaxFieldLength の最大値: 65534 バイト (6K バイト)<br>MaxRequestBytes 最大値: 16777216バイト (16M バイト)</p><p>上記内容が、皆様のご参考になれば幸甚です。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは！ Azure &amp;amp; Identity サポート チームの三浦 大です。&lt;/p&gt;
&lt;p&gt;今回はテナント制限の機能に関して、よくあるお問い合わせと、その回答をまとめさせていただきました。&lt;/p&gt;
&lt;h2 id=&quot;テナント制限とは&quot;&gt;&lt;a href=&quot;#テナント
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
      <category term="Tenant Restrictions" scheme="https://jpazureid.github.io/tags/Tenant-Restrictions/"/>
    
  </entry>
  
  <entry>
    <title>Azure Active Directory への接続で使用する IP アドレス範囲の変更</title>
    <link href="https://jpazureid.github.io/azure-active-directory/changed_aad_ip_range/"/>
    <id>https://jpazureid.github.io/azure-active-directory/changed_aad_ip_range/</id>
    <published>2018-09-04T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.176Z</updated>
    
    <content type="html"><![CDATA[<p>日々ブログをご愛読してくれている皆様、Azure Identity チームの宮林です。</p><p>先日、新着情報にて広報された、2018 年 9 月 10 日までに変更が行われる Azure Active Directory の IP アドレス範囲についてお知らせいたします。</p><p>IP アドレス範囲の変更とありますが、去年から追加となった範囲内への変更となりますので、すでにご対応済みの場合は影響がございません。</p><p>以下のページで告知している Azure Active Directory の新着情報の抜粋と、Q＆A 形式で IP アドレス範囲の変更に伴う影響について補足します。</p><ul><li><p>Azure Active Directory の新着情報</p><p><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/whats-new" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/whats-new</a></p></li></ul><blockquote><p>(以下抜粋)</p><p>2018 年 7 月</p><p>Azure Active Directory の IP アドレス範囲の変更</p><p>タイプ: 変更の計画<br>サービス カテゴリ: その他<br>製品の機能: プラットフォーム</p><p>Microsoft では、Azure AD に対してより大規模な IP 範囲の導入を進めています。<br>つまり、ファイアウォール、ルーター、またはネットワーク セキュリティ グループの Azure AD IP アドレス範囲を構成している場合はそれらを更新する必要があります。<br>Microsoft では、Azure AD で新しいエンドポイントが追加されたときにファイアウォール、ルーター、またはネットワーク セキュリティ グループの IP アドレス範囲の構成を再び変更する必要がないように、この更新を行っています。</p><p>ネットワーク トラフィックは、今後 2 か月にわたってこれらの新しい範囲に移行されます。 中断のないサービスを継続するには、2018 年 9 月 10 日までに、次に示す更新された値を IP アドレスに追加する必要があります。</p><p>20.190.128.0/18<br>40.126.0.0/18<br>すべてのネットワーク トラフィックが新しい範囲に移行されるまでは古い IP アドレス範囲を削除しないことを強くお勧めします。 移行に関する最新情報や古い範囲を削除できるタイミングについては、「Office 365 URL および IP アドレス範囲」を参照してください。</p><p>(抜粋ここまで)</p></blockquote><hr><ul><li>Q : Azure 上に構築している仮想マシンの IP アドレスもかわりますか？</li><li>A : いいえ、Azure 上に構築している仮想マシンの IP アドレスは、この案内の対象ではありません。<br>Azure Active Directory に対しての通信に必要な宛先 IP アドレス範囲の変更となります。</li></ul><hr><ul><li>Q : [去年から追加となった範囲内への変更となります] とあるが、すでに案内されている情報はどのページにありますか？</li><li>A : 「Office 365 URL および IP アドレス範囲」のページから JSON 形式のファイルを参照してご確認ください。<br>“serviceAreaDisplayName”: “Microsoft 365 Common and Office Online” という名前の値を参照ください。</li></ul><p>(過去には XML 形式でお伝えしていた情報となりますが、2018 年 10 月 2 日より JSON 形式に変更となりました。)</p><hr><ul><li><p>Q : 「Office 365 URL および IP アドレス範囲」を参考にIPアドレスではなくホスト名を使用してイントラネットからインターネットへの接続をネットワーク機器にて制限していたのですが影響はありますか？</p></li><li><p>A : いいえ、ホスト名を使用して運用されているお客様には影響がございません。</p></li></ul><hr><p>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。</p><p>上記内容が少しでも皆様の参考となりますと幸いです。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;日々ブログをご愛読してくれている皆様、Azure Identity チームの宮林です。&lt;/p&gt;
&lt;p&gt;先日、新着情報にて広報された、2018 年 9 月 10 日までに変更が行われる Azure Active Directory の IP アドレス範囲についてお知らせいたし
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD におけるロール管理の新しい方法</title>
    <link href="https://jpazureid.github.io/azure-active-directory/roles-and-administrators/"/>
    <id>https://jpazureid.github.io/azure-active-directory/roles-and-administrators/</id>
    <published>2018-08-22T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.308Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの栗井です。</p><p>本記事は、2018年7月末に公開された A new way to manage roles and administrators in Azure AD を元にしています。<br>これまで、 Azure AD の全体管理者などのロールを割り当てられているユーザー一覧を取得することができなかったのですが、最近の更新により、簡単に確認できるようになりました。<br>元記事を参考に、ユーザーへのディレクトリロールの新しい割り当て・管理方法について、画面キャプチャを含めてご紹介します。</p><p>ユーザの役割の確認や管理者権限の割り当てを、これまでより簡単におこなうことができます。</p><p>以下が、新しい機能の特徴です。</p><ul><li>ビルトイン (既定) のディレクトリロールの一覧と、それぞれの詳細を確認可能</li><li>役割の管理や設定がより簡単に</li><li>関連ドキュメントへのリンク追加</li></ul><p>言い換えますと 「全体管理者は何人いるのか？」「このユーザーに割り当てられているのは何の役割か？」がすぐ分かるようになりました。</p><img src="/blog/azure-active-directory/roles-and-administrators/roles-and-administrators.png"><p>概要画面から、新機能「ロールと管理者」がご利用できます</p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>ビルトイン ディレクトリ ロールの一覧とそれぞれの簡単な説明は 「ロールと管理者」をクリックすることで確認できます。これも最近追加されました Azure AD と連携するアプリケーションの管理を目的とした新しいロールも含まれます。</p><p>現在サインインして操作を実施しているユーザー自身に何かしらのロールが割り当てられている場合、画面上部に表示されます。「ロール」をクリックすると、自身に割り当てられているロールと、それぞれの概要の一覧を確認できます。</p><img src="/blog/azure-active-directory/roles-and-administrators/list-administrators.png"><p>図: 「ロールと管理者」下の、各ロールと説明の一覧</p><p>また、ロールの行をクリックすると、そのロールに割り当てられているユーザーの一覧が確認できます。</p><img src="/blog/azure-active-directory/roles-and-administrators/role-member.png">  <p>図: ロールに割り当てられているユーザー (メンバー) 一覧</p><p>各ロールによりどのようなことができるのかという質問をよく頂きますが、それぞれのロールに何の権限があるのか、その詳細を一覧でみられるようになりました。同じ画面で、関連記事のリンクも見ることができます。ロールを最大限有効に使うためにぜひご活用ください。<br>画像に示すように、ブレードの「説明」をクリックするとこの画面が見られます。もしくはロールの一覧画面から、各行の右側にある「・・・」をクリックをすることでも、同じ画面に辿り着くことができます。</p><p>あるロールに割り当てられているユーザの一覧に加えて、その逆引きである「あるユーザーに割り当てられているロールの一覧」を見ることができるようになりました。同じ画面から、ユーザーに新たなロールを追加することができます。<br>詳細は <a href="https://docs.microsoft.com/en-us/azure/active-directory/users-groups-roles/directory-assign-admin-roles" target="_blank" rel="noopener">Assigning administrator roles in Azure Active Directory</a>をご参照ください (英語ドキュメント)。</p><img src="/blog/azure-active-directory/roles-and-administrators/add-role.png">  <p>図: ユーザーに割り当てられているロールの一覧と「ロールの追加」ボタン</p><p>一人のユーザーに複数の特権ロール (privileged roles) を割り当てることも可能です。既に割り当てられているものは表示されません。</p><img src="/blog/azure-active-directory/roles-and-administrators/user-role.png">  <p>図: 割り当て可能なロールの一覧</p><h2 id="Azure-AD-PIM-での更新"><a href="#Azure-AD-PIM-での更新" class="headerlink" title="Azure AD PIM での更新"></a>Azure AD PIM での更新</h2><p>より細やかな権限管理は Azure AD Privileged Identity Management (PIM) で可能です。 Azure AD PIM の管理ブレードにも「ロールと管理者」へのリンクがあります。</p><img src="/blog/azure-active-directory/roles-and-administrators/pim-link.png">  <p>図: Privileged Identity Management 画面から「ロールと管理者」へのリンク</p><p>もし組織で PIM を有効にしていなくても、「PIMで管理」をクリックすれば、管理者保護のためにPIMをどのように活用できるか確認できます。無料のトライアルもご利用可能です。</p><img src="/blog/azure-active-directory/roles-and-administrators/pim.png"><p>「PIM」で管理から、Privileged Identity Managementの情報が閲覧できます。</p><p>上記内容が少しでも参考となりますと幸いです。製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの栗井です。&lt;/p&gt;
&lt;p&gt;本記事は、2018年7月末に公開された A new way to manage roles and administrators in Azure AD を元にしています。&lt;b
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Connect アップグレード手順</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/how-to-upgrade/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/how-to-upgrade/</id>
    <published>2018-08-09T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.366Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。 Azure Identity サポートの谷です。</p><p>Azure AD Connect (AADC) のアップグレード手順をご紹介いたします。AADC の更新バージョンのリリース頻度は高く、この 3 カ月でも 3 回更新バージョンがリリースされています。更新には、既知の不具合やセキュリティに関する修正に加えて機能強化も含まれています。そのため、できるだけ安定して AADC を運用いただくうえで弊社としての推奨は以下となります。</p><ul><li>最新バージョンの利用</li><li>最低でも 6 カ月毎に最新バージョンへのアップグレード</li></ul><p>Azure AD Connect: バージョンのリリース履歴<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/connect/active-directory-aadconnect-version-history" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/connect/active-directory-aadconnect-version-history</a></p><p>なお、サポートという観点では、リリースされている全てのバージョンの AADC が現在サポート対象となります。特定のバージョンの AADC をサポート終了する場合にはアップグレードを実施いただくために十分な期間を設け、ご案内いたしますので、ご安心ください。</p><p>(トラブルシューティングなどの中で古いバージョンをご利用されている場合に切り分けのためのバージョンアップをお願いする、より詳細な調査をするためにも、まずアップグレードをお願いするという可能性があることについては予めご承知おきください)</p><h2 id="アップグレードの流れ"><a href="#アップグレードの流れ" class="headerlink" title="アップグレードの流れ"></a>アップグレードの流れ</h2><h3 id="AADC-1-台構成の場合"><a href="#AADC-1-台構成の場合" class="headerlink" title="AADC 1 台構成の場合"></a>AADC 1 台構成の場合</h3><ol><li>バージョンアップ前にサーバーの健全性確認</li><li>設定情報 / ルールのバックアップ</li><li>アップグレード</li></ol><h3 id="AADC-2-台以上の構成の場合"><a href="#AADC-2-台以上の構成の場合" class="headerlink" title="AADC 2 台以上の構成の場合"></a>AADC 2 台以上の構成の場合</h3><p>1 台構成の場合と同様でも構いませんが、より慎重に行う場合には、バージョンアップ時に片方ずつステージング モードに切り替え、同期処理に影響を与えないように実施することも可能です。この場合には、下記の流れで実施します。</p><ol><li>バージョンアップ前に両サーバーの健全性確認</li><li>設定情報 / ルールのバックアップ</li><li>1 台目アップグレード</li><li>ステージングモードの切り替え</li><li>アップグレード後の動作確認</li><li>2 台目のアップグレード</li><li>ステージングモードの切り替え</li><li>アップグレード後の動作確認</li><li>必要に応じてステージングモードの切り替え</li></ol><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><h3 id="健全性確認"><a href="#健全性確認" class="headerlink" title="健全性確認"></a>健全性確認</h3><ol><li>AADC サーバーにてイベント ログ (システム / アプリケーション) にてエラーや警告などの記録がないことを確認します。</li><li>Synchronization Service Manager にて同期処理にて success 以外の記録がないことを確認します。</li></ol><h3 id="設定情報-ルールのバックアップ"><a href="#設定情報-ルールのバックアップ" class="headerlink" title="設定情報 / ルールのバックアップ"></a>設定情報 / ルールのバックアップ</h3><p>バックアップは万が一アップグレードが正常に実施できなかった場合に備えて取得いただくことをお勧めしております。正常にアップグレードが行えた場合には特にバックアップからのリストア等は不要となります。問題が生じた場合、リストア可能なのはルールのみとなります。設定情報は記録情報から手動で設定し直す必要があります。</p><p>&lt;設定情報の記録&gt;</p><ol><li>Synchronization Service Manager を起動します。</li><li>[Connectors] を選択します。</li><li>オンプレミス AD のコネクタを右クリックし、[Properties] をクリックします。</li><li>[Configure Directory Partitions] - [Containers] をクリックします。</li><li>パスワードを入力し、[OK] をクリックします。</li><li>同期対象の OU/コンテナの画面ショットを採取するなどし、情報を記録しておきます。</li><li>[Select Object Types] をクリックします。</li><li>[Show All] にチェックを入れ、全項目が確認できるように画面ショットを採取します。</li><li>[Select Attributes] をクリックします。</li><li>[Show All] にチェックを入れ、全項目が確認できるように画面ショットを採取します。</li><li>デスクトップなどにある [Azure AD Connect] を実行し、構成ウィザードを開きます。</li><li>[構成] をクリックします。</li><li>[現在の構成を表示する] をクリックして、[次へ] をクリックします。</li><li>全項目が確認できるように画面ショットを採取します。</li></ol><p>&lt;同期ルールのエクスポート&gt;</p><ol><li>スタート画面より Synchronization Rules Editor を起動します。</li><li>全ルールを選択し、[Export] をクリックします。出力されたファイルを保存します (PS1 という拡張子で保存します。)<br>例) sync_rule.ps1</li><li>[Direction] より [Outbound] を選択します。</li><li>全ルールを選択し、[Export] をクリックします。出力されたファイルを保存します (PS1 という拡張子で保存します。)</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。 Azure Identity サポートの谷です。&lt;/p&gt;
&lt;p&gt;Azure AD Connect (AADC) のアップグレード手順をご紹介いたします。AADC の更新バージョンのリリース頻度は高く、この 3 カ月でも 3 回更新バージョンがリリースされていま
      
    
    </summary>
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/tags/AAD-Connect/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Connect サーバーの CPU 使用率が頻繁に 100% になる問題について</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/problem-cpu-usage-100-aadc-server/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/problem-cpu-usage-100-aadc-server/</id>
    <published>2018-08-09T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.388Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure ID チームの松枝です。<br>本記事では、Azure AD Connect サーバーの CPU 使用率が頻繁に 100% になる問題について、次のとおりご案内いたします。<br>先日より同様の事象について、多くのお問い合わせをいただいております (ご迷惑をお掛けしまして申し訳ありません)。<br>先日修正を含む Azure AD Connect のバージョンがリリースされましたので、もし本問題事象が発生しましたら、下記の対処方法を実施ください。</p><h2 id="本事象の概要："><a href="#本事象の概要：" class="headerlink" title="本事象の概要："></a>本事象の概要：</h2><p>”バージョン 1.1.819.0 以前” の Azure AD Connect の不具合が原因で、 .NET Framework に関するセキュリティ更新プログラムの適用が行われた後、 Azure AD Connect サーバーの CPU 使用率 が常に 100% に近い高負荷状態になります。</p><p><strong>事象発生が報告されている更新プログラム：</strong><br>KB4338420<br>KB4338606<br>KB4054542<br>KB4054566<br>KB4054590<br>KB4338814<br>KB4338419<br>KB4338605<br>KB4345418</p><p><strong>参考情報：</strong></p><ul><li><a href="https://support.microsoft.com/en-us/help/4346822/high-cpu-usage-in-azure-active-directory-connect-health-for-sync" target="_blank" rel="noopener">High CPU issue in Azure Active Directory Connect Health for Sync</a></li></ul><p>もし、高負荷状態にあるプロセスが ”Microsoft.Identity.Health.AadSync.MonitoringAgent.Startup.exe” の場合、本事象に該当する可能性が高いと考えられます。</p><h2 id="根本的な対処方法："><a href="#根本的な対処方法：" class="headerlink" title="根本的な対処方法："></a>根本的な対処方法：</h2><p>Azure AD Connect を、本事象に対する修正を含む最新バージョン Azure AD Connect 1.1.880.0 にアップグレードします。<br>バージョン 1.1.880.0 における修正内容につきましては、下記の弊社技術情報をご参照ください。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/reference-connect-version-history#118800" target="_blank" rel="noopener">Azure AD Connect: Version release history - 1.1.880.0</a></li></ul><h2 id="暫定的な対処方法："><a href="#暫定的な対処方法：" class="headerlink" title="暫定的な対処方法："></a>暫定的な対処方法：</h2><p>運用上の理由で上記の根本的な対処が難しい場合、本事象の原因となっているサービス「Azure AD Connect Health Sync Monitoring Service」を停止することでも回避できます。アップグレードするまでの暫定的な対処方法としてご検討ください。<br>なお、このサービスを停止した場合、Azure AD Connect Health for Sync の機能は利用できなくなりますが、Azure AD Connect の同期処理や認証処理に影響はありません。</p><p>上記内容が少しでも参考となりますと幸いです。<br>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。</p><h2 id="関連する記事："><a href="#関連する記事：" class="headerlink" title="関連する記事："></a>関連する記事：</h2><ul><li><a href="/blog/azure-active-directory-connect/how-to-upgrade/">Azure AD Connect アップグレード手順</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure ID チームの松枝です。&lt;br&gt;本記事では、Azure AD Connect サーバーの CPU 使用率が頻繁に 100% になる問題について、次のとおりご案内いたします。&lt;br&gt;先日より同様の事象について、多くのお問い合わせをいただいております (
      
    
    </summary>
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/tags/AAD-Connect/"/>
    
  </entry>
  
  <entry>
    <title>RBAC のスコープについて</title>
    <link href="https://jpazureid.github.io/azure-active-directory/about-rbac/"/>
    <id>https://jpazureid.github.io/azure-active-directory/about-rbac/</id>
    <published>2018-08-08T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.048Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの坂井です。</p><p>今回は ロールベースのアクセス制御 (RBAC) について紹介します。Azure の各種リソースに対するアクセス制御 (IAM) とも呼ばれ、リソースに対して実行できること、そのユーザーがアクセスできる領域を管理するのに役立ちます。</p><p>RBAC の設定ポイントとしては、3 つあります。</p><ul><li><p>セキュリティ プリンシパル</p><p>  権限を付与する対象を表します。ユーザー、グループ、サービス プリンシパルに設定可能です-</p></li><li><p>ロール (権限) 定義</p><p>  組み込みロールやカスタム ロールから、付与したい権限の種類を決定します</p></li><li><p>Scope (スコープ)</p><p>  権限が適用される範囲を決定します(サブスクリプション &gt; リソース グループ &gt; リソース)</p></li></ul><p>サブスクリプション全体に対して権限を付与すると、リソース グループ、リソースへと権限が継承されます。ここからは “スコープ” について具体例をもとに、紹介します。</p><h2 id="シナリオ-1-サブスクリプション単位"><a href="#シナリオ-1-サブスクリプション単位" class="headerlink" title="シナリオ 1: サブスクリプション単位"></a>シナリオ 1: サブスクリプション単位</h2><ul><li><strong>設定内容</strong>: サブスクリプション A には「所有者」権限、サブスクリプション B には権限の付与なし</li><li><strong>設定結果</strong>: ユーザーは、サブスクリプション A のすべての操作が可能ですが、サブスクリプション B を参照することもできない</li><li><strong>設定手順</strong>: [サブスクリプション] - [サブスクリプション A ] - [アクセス制御 (IAM) ] より 「＋追加」</li></ul><img src="/blog/azure-active-directory/about-rbac/scenario1.png"><h2 id="シナリオ-2-リソース-グループ単位"><a href="#シナリオ-2-リソース-グループ単位" class="headerlink" title="シナリオ 2: リソース グループ単位"></a>シナリオ 2: リソース グループ単位</h2><ul><li><strong>設定内容</strong>: リソース グループ 1 には「所有者」権限、リソース グループ 2 には権限の付与なし</li><li><strong>設定結果</strong>: ユーザーは、リソース グループ  1  配下のすべての操作が可能ですが、リソース グループ 2 を参照することもできません。 また、新しいリソース グループの作成など、サブスクリプションのスコープで操作が必要な操作はできない</li><li><strong>設定手順</strong>: [リソース グループ] - [リソース グループ 1 ] - [アクセス制御 (IAM) ] より 「＋追加」</li></ul><img src="/blog/azure-active-directory/about-rbac/scenario2.png"><h2 id="シナリオ-3-リソース単位"><a href="#シナリオ-3-リソース単位" class="headerlink" title="シナリオ 3 : リソース単位"></a>シナリオ 3 : リソース単位</h2><ul><li><strong>設定内容</strong>: リソース a には「所有者」権限、その他権限の付与なし</li><li><strong>設定結果</strong>: ユーザーは、リソース a のすべての操作が可能ですが、その他リソースの参照や操作はできない</li><li><strong>設定手順</strong>: [リソース グループ 1 ] - [リソース a ] - [アクセス制御 (IAM) ] より 「＋追加」</li></ul><img src="/blog/azure-active-directory/about-rbac/scenario3.png"><h2 id="シナリオ-4-別スコープで、別の権限を付与"><a href="#シナリオ-4-別スコープで、別の権限を付与" class="headerlink" title="シナリオ 4 : 別スコープで、別の権限を付与"></a>シナリオ 4 : 別スコープで、別の権限を付与</h2><ul><li><strong>設定内容</strong>: サブスクリプション Aには「所有者」権限、サブスクリプション B のリソース グループ 4 に「閲覧者」の権限を付与</li><li><strong>設定結果</strong>: ユーザーは、サブスクリプション A のすべての操作が可能です。サブスクリプション B については、リソース グループ 4 の閲覧 (つまり参照) のみ可能です。 このシナリオは、RBAC の設定がひとつのユーザーやグループ オブジェクトに対して、複数のスコープや異なった権限を付与することが可能であることを示す</li><li><strong>設定手順</strong>: [サブスクリプション] - [サブスクリプション A ] - [アクセス制御 (IAM) ] より 「＋追加」で役割を「所有者」で選択、もしくは [リソース グループ] - [リソース グループ 4 ] - [アクセス制御(IAM) ] より 「＋追加」で役割を「閲覧者」で選択</li></ul><img src="/blog/azure-active-directory/about-rbac/scenario4.png"><h2 id="シナリオ-5-親スコープからの継承"><a href="#シナリオ-5-親スコープからの継承" class="headerlink" title="シナリオ 5 : 親スコープからの継承"></a>シナリオ 5 : 親スコープからの継承</h2><ul><li><strong>設定内容</strong>: サブスクリプション Aには「閲覧者」権限、リソース グループ 2 に「所有者」の権限を付与</li><li><strong>設定結果</strong>: ユーザーは、サブスクリプション A のすべての参照が可能かつ、リソース グループ 2 配下において、すべての操作が可能 </li><li><strong>設定手順</strong>: [サブスクリプション] - [サブスクリプション A ] - [アクセス制御 (IAM) ] より 「＋追加」で役割を「閲覧者」で選択、もしくは [リソース グループ] - [リソース グループ 2 ] - [アクセス制御(IAM) ] より 「＋追加」で役割を「所有者」で選択</li></ul><img src="/blog/azure-active-directory/about-rbac/scenario5.png"><h2 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h2><p>サブスクリプションとリソース グループに与える権限を逆にして、サブスクリプション A には「所有者」権限、リソース グループ 2 に「閲覧者」を付与した場合は、リソース グループ 2 に対しても、より強力な「所有者」の権限が継承されます。</p><img src="/blog/azure-active-directory/about-rbac/supplement.png"><p>各サブスクリプションが紐づく Azure AD が異なる場合について</p><p>今回のシナリオはすべて、サブスクリプション A と サブスクリプション B が同じ Azure AD に紐づいている前提です。もし、サブスクリプション A - Azure AD 1、サブスクリプション B - Azure AD 2 というようにそれぞれのサブスクリプションが別の Azure AD に紐づいている場合は、設定やリソースを操作するためにはディレクトリの切り替えを実施する必要があります。</p><img src="/blog/azure-active-directory/about-rbac/directory-switching.png"><p>また、サブスクリプションの権限と Azure AD の権限は異なりますので、サブスクリプションに対して「所有者」の権限を付与しても、Azure AD 上のユーザー作成・削除、パスワード変更などの管理者操作が行えるわけではありませんので、その点ご注意ください。こちらについては、リンクのブログでも紹介しておりますので、合わせてご参照ください。</p><p>上記内容が少しでも皆様の参考となりますと幸いです。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの坂井です。&lt;/p&gt;
&lt;p&gt;今回は ロールベースのアクセス制御 (RBAC) について紹介します。Azure の各種リソースに対するアクセス制御 (IAM) とも呼ばれ、リソースに対して実行できること、そ
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
      <category term="RBAC" scheme="https://jpazureid.github.io/tags/RBAC/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Graph API を利用して Azure AD のサインイン アクティビティ レポートを CSV ファイルで取得する PowerShell スクリプト</title>
    <link href="https://jpazureid.github.io/azure-active-directory/microsoft-graph-api-signin-activity-reports/"/>
    <id>https://jpazureid.github.io/azure-active-directory/microsoft-graph-api-signin-activity-reports/</id>
    <published>2018-08-08T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.263Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは Azure &amp; Identity サポート チームの 姚 ヨウです。</p><p>前回、Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを Azure AD Graph API を経緯し、PowerShell で csv 形式で取得できるスクリプトを紹介しました。</p><p>既にご存知の方もいらっしゃると思いますが、マイクロソフトとしては、Azure AD Graph API ではなく、 Microsoft Graph API の利用を推進しています。</p><p>今回は、PowerShell スクリプトで Microsoft Graph API を利用して Azure AD のサインイン アクティビティ レポートを csv 形式で取得する方法を紹介します。</p><p>今回のスクリプトは前回紹介しましたスクリプトと比較して以下の利点があります。</p><ul><li>サインイン アクティビティ レポートの内容をより詳細に csv ファイルに格納します</li><li>アプリケーションのキーではなく証明書を利用することでセキュリティを高めています (※)</li></ul><p>※ セキュリティ観点で 平文のキーではなく証明書を用いたトークン取得を推奨しています。</p><p>以下に一連の手順を大まかに 3 つに分けて解説します。</p><p>事前に、<code>C:\SignInReport</code> フォルダーなど作業用のフォルダーを作成し、以下の手順にお進みください。</p><h3 id="1-認証に使用する証明書の準備"><a href="#1-認証に使用する証明書の準備" class="headerlink" title="1. 認証に使用する証明書の準備"></a><strong>1. 認証に使用する証明書の準備</strong></h3><p>トークン取得に証明書を用います。</p><p>これは、これまでの平文のキーを用いる方法よりもセキュリティ的に強固であり、推奨している方法です。以下の PowerShell スクリプトは、自己署名証明書を生成し、ユーザーの証明書ストア (個人) に格納します。</p><p>さらに、公開鍵を含む証明書 (SelfSignedCert.cer ファイル) をカレント  ディレクトリに出力します。</p><p>エディターを開き、下記内容をコピーして貼り付けください。そのファイルを <code>CreaterCert.ps1</code> として <code>C:\SignInReport</code> フォルダー配下に保存します。</p><p>保存したら、このスクリプトを実行ください。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Create self signed certificate</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$cert</span> = New-SelfSignedCertificate -Subject <span class="string">"CN=SelfSignedCert"</span> -CertStoreLocation <span class="string">"Cert:\CurrentUser\My"</span>  -KeyExportPolicy Exportable -KeySpec Signature</span><br><span class="line"><span class="variable">$cert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Export new self signed certificate as .cer file</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$cerfile</span> = <span class="string">".\SelfSignedCert.cer"</span></span><br><span class="line">Export-Certificate -Cert <span class="variable">$cert</span> -FilePath <span class="variable">$cerfile</span></span><br></pre></td></tr></table></figure><h3 id="2-処理に必要なライブラリを-nuget-で取得するスクリプトの準備と実行"><a href="#2-処理に必要なライブラリを-nuget-で取得するスクリプトの準備と実行" class="headerlink" title="2. 処理に必要なライブラリを nuget で取得するスクリプトの準備と実行"></a><strong>2. 処理に必要なライブラリを nuget で取得するスクリプトの準備と実行</strong></h3><p>証明書を用いたトークン取得処理はライブラリを用いて行います。</p><p>処理に必要なライブラリは nuget で取得します。</p><p>テキスト エディターを開き、下記内容をコピーして貼り付けください。</p><p>そのファイルを GetModuleByNuget.ps1 として C:\SignInReport フォルダー配下に保存および実行ください。本スクリプトを実行すると、C:\SignInReport 配下に Tools というフォルダーが作成され、Microsoft.IdentityModel.Clients.ActiveDirectory.dll などのファイルが保存されます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Download NuGet.exe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$sourceNugetExe</span> = <span class="string">"https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"</span></span><br><span class="line"><span class="variable">$targetNugetExe</span> = <span class="string">".\nuget.exe"</span></span><br><span class="line"><span class="built_in">Remove-Item</span> .\Tools -Force -Recurse -ErrorAction Ignore</span><br><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="variable">$sourceNugetExe</span> -OutFile <span class="variable">$targetNugetExe</span></span><br><span class="line"><span class="built_in">Set-Alias</span> nuget <span class="variable">$targetNugetExe</span> -Scope Global -Verbose</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Download Microsoft.IdentityModel.Clients.ActiveDirectory.dll</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">./nuget install Microsoft.IdentityModel.Clients.ActiveDirectory -O .\Tools</span><br><span class="line">md .\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory</span><br><span class="line"><span class="variable">$prtFolder</span> = <span class="built_in">Get-ChildItem</span> ./Tools | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Name <span class="nomarkup">-match</span> <span class="string">'Microsoft.IdentityModel.Clients.ActiveDirectory.'</span>&#125;</span><br><span class="line">move .\Tools\<span class="variable">$prtFolder</span>\lib\net45\*.* .\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory</span><br><span class="line"><span class="built_in">Remove-Item</span> .\Tools\<span class="variable">$prtFolder</span> -Force -Recurse</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Remove NuGet.exe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="built_in">Remove-Item</span> nuget.exe</span><br></pre></td></tr></table></figure><h3 id="3-サインイン-ログを取得するスクリプトの準備"><a href="#3-サインイン-ログを取得するスクリプトの準備" class="headerlink" title="3. サインイン ログを取得するスクリプトの準備"></a><strong>3. サインイン ログを取得するスクリプトの準備</strong></h3><p>1 および 2 の手順を実行し、証明書および実行に必要なライブラリの準備が整いましたら、以下の手順で、アプリケーションおよびスクリプトを準備します。</p><p>まず、以下の公開情報の手順に従って、アプリケーションを登録します。</p><ul><li>Azure AD Reporting API にアクセスするための前提条件<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-reporting-api-prerequisites-azure-portal" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-reporting-api-prerequisites-azure-portal</a></li></ul><p>今回はアプリケーションのクライアント シークレットとして証明書を利用します。</p><p>そのため、 上記の公開情報では “アプリケーションのクライアント シークレットを取得する” の手順において 5 でキーを生成していますが、その代わりに [公開キーのアップロード] を実行します。</p><p>ここで、このブログ記事の “1. 認証に使用する証明書の準備” の手順を実行した結果作成される SelfSignedCert.cer を指定してアップロード後、 [保存] をクリックします。</p><p>アプリケーションの登録、証明書の登録が完了しましたら、テキスト エディタを開き、次の中身をコピーして貼り付け、環境に合わせて赤字部分の内容を設定します (環境に合わせた設定は前提条件に関する公開情報の “構成設定を収集する” に情報があります)。</p><p>設定が完了しましたら、 <code>GetSignInLogs.ps1</code> ファイルとして<code>C:\SignInReport</code> 配下に保存し、実行します。</p><p>これによりサインイン アクティビティ レポートを csv ファイルとして取得できます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Add-Type</span> -Path <span class="string">".\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory\Microsoft.IdentityModel.Clients.ActiveDirectory.dll"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Authorization &amp; resource Url</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$tenantId</span> = <span class="string">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span> </span><br><span class="line"><span class="variable">$resource</span> = <span class="string">"https://graph.microsoft.com"</span> </span><br><span class="line"><span class="variable">$clientID</span> = <span class="string">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span></span><br><span class="line"><span class="variable">$thumprint</span> = <span class="string">"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span></span><br><span class="line"><span class="variable">$outfile</span> = <span class="string">"output.csv"</span></span><br><span class="line"><span class="variable">$data</span> = @()</span><br><span class="line"></span><br><span class="line"><span class="comment"># tenantID は [Azure Active Directory] - [プロパティ] よりディレクトリ ID を取得します。</span></span><br><span class="line"><span class="comment"># clientID は "Azure AD Reporting API にアクセスするための前提条件" の "アプリケーションのクライアント ID を取得する" の手順で取得します。</span></span><br><span class="line"><span class="comment"># thumbprint は公開キーのアップロードを実行後の "キー" のページで "公開鍵" にサムプリントとして表示されている情報です。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Authorization &amp; resource Url</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$authUrl</span> = <span class="string">"https://login.microsoftonline.com/<span class="variable">$tenantId</span>/"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Get certificate</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$cert</span> = <span class="built_in">Get-ChildItem</span> -path cert:\CurrentUser\My | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Thumbprint <span class="nomarkup">-eq</span> <span class="variable">$thumprint</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Create AuthenticationContext for acquiring token </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="variable">$authContext</span> = <span class="built_in">New-Object</span> Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext <span class="variable">$authUrl</span>, <span class="literal">$false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Create credential for client application </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$clientCred</span> = <span class="built_in">New-Object</span> Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate <span class="variable">$clientID</span>, <span class="variable">$cert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Acquire the authentication result</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$authResult</span> = <span class="variable">$authContext</span>.AcquireTokenAsync(<span class="variable">$resource</span>, <span class="variable">$clientCred</span>).Result </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">$null</span> <span class="nomarkup">-ne</span> <span class="variable">$authResult</span>.AccessToken) &#123;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Compose the access token type and access token for authorization header</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="variable">$headerParams</span> = @&#123;<span class="string">'Authorization'</span> = <span class="string">"$(<span class="variable">$authResult</span>.AccessTokenType) $(<span class="variable">$authResult</span>.AccessToken)"</span>&#125;</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">"<span class="variable">$resource</span>/beta/auditLogs/signIns"</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="string">"Fetching data using Uri: <span class="variable">$url</span>"</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">Do</span> &#123;</span><br><span class="line">        <span class="variable">$myReport</span> = (<span class="built_in">Invoke-WebRequest</span> -UseBasicParsing -Headers <span class="variable">$headerParams</span> -Uri <span class="variable">$url</span>)</span><br><span class="line">        <span class="variable">$myReportValue</span> = (<span class="variable">$myReport</span>.Content | <span class="built_in">ConvertFrom-Json</span>).value</span><br><span class="line">        <span class="variable">$myReportVaultCount</span> = <span class="variable">$myReportValue</span>.Count</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> <span class="nomarkup">-lt</span> <span class="variable">$myReportVaultCount</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="variable">$eachEvent</span> = @&#123;&#125;</span><br><span class="line"> </span><br><span class="line">            <span class="variable">$thisEvent</span> = <span class="variable">$myReportValue</span>[<span class="variable">$j</span>]</span><br><span class="line">            <span class="variable">$canumbers</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies.Count</span><br><span class="line"> </span><br><span class="line">            <span class="variable">$eachEvent</span> = <span class="variable">$thisEvent</span> |</span><br><span class="line">            select id,</span><br><span class="line">            createdDateTime,</span><br><span class="line">            userDisplayName,</span><br><span class="line">            userPrincipalName,</span><br><span class="line">            userId,</span><br><span class="line">            appId,</span><br><span class="line">            appDisplayName,</span><br><span class="line">            ipAddress,</span><br><span class="line">            clientAppUsed,</span><br><span class="line">            mfaDetail,</span><br><span class="line">            correlationId,</span><br><span class="line">            conditionalAccessStatus,</span><br><span class="line">            isRisky,</span><br><span class="line">            riskLevel,</span><br><span class="line"> </span><br><span class="line">            @&#123;Name = <span class="string">'status.errorCode'</span>; Expression = &#123;<span class="variable">$_</span>.status.errorCode&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'status.failureReason'</span>; Expression = &#123;<span class="variable">$_</span>.status.failureReason&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'status.additionalDetails'</span>; Expression = &#123;<span class="variable">$_</span>.status.additionalDetails&#125;&#125;,</span><br><span class="line"> </span><br><span class="line">            @&#123;Name = <span class="string">'deviceDetail.deviceId'</span>; Expression = &#123;<span class="variable">$_</span>.deviceDetail.deviceId&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'deviceDetail.displayName'</span>; Expression = &#123;<span class="variable">$_</span>.deviceDetail.displayName&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'deviceDetail.operatingSystem'</span>; Expression = &#123;<span class="variable">$_</span>.deviceDetail.operatingSystem&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'deviceDetail.browser'</span>; Expression = &#123;<span class="variable">$_</span>.deviceDetail.browser&#125;&#125;,</span><br><span class="line"> </span><br><span class="line">            @&#123;Name = <span class="string">'location.city'</span>; Expression = &#123;<span class="variable">$_</span>.location.city&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'location.state'</span>; Expression = &#123;<span class="variable">$_</span>.location.state&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'location.countryOrRegion'</span>; Expression = &#123;<span class="variable">$_</span>.location.countryOrRegion&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'location.geoCoordinates.altitude'</span>; Expression = &#123;<span class="variable">$_</span>.location.geoCoordinates.altitude&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'location.geoCoordinates.latitude'</span>; Expression = &#123;<span class="variable">$_</span>.location.geoCoordinates.latitude&#125;&#125;,</span><br><span class="line">            @&#123;Name = <span class="string">'location.geoCoordinates.longitude'</span>; Expression = &#123;<span class="variable">$_</span>.location.geoCoordinates.longitude&#125;&#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$k</span> = <span class="number">0</span>; <span class="variable">$k</span> <span class="nomarkup">-lt</span> <span class="variable">$canumbers</span>; <span class="variable">$k</span>++) &#123;</span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies[<span class="variable">$k</span>].id</span><br><span class="line">                <span class="variable">$eachEvent</span> = <span class="variable">$eachEvent</span> | <span class="built_in">Add-Member</span> @&#123;<span class="string">"conditionalAccessPolicies.id<span class="variable">$k</span>"</span> = <span class="variable">$temp</span>&#125; -PassThru</span><br><span class="line"> </span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies[<span class="variable">$k</span>].displayName</span><br><span class="line">                <span class="variable">$eachEvent</span> = <span class="variable">$eachEvent</span> | <span class="built_in">Add-Member</span> @&#123;<span class="string">"conditionalAccessPolicies.displayName<span class="variable">$k</span>"</span> = <span class="variable">$temp</span>&#125; -PassThru</span><br><span class="line"> </span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies[<span class="variable">$k</span>].enforcedGrantControls</span><br><span class="line">                <span class="variable">$eachEvent</span> = <span class="variable">$eachEvent</span> | <span class="built_in">Add-Member</span> @&#123;<span class="string">"conditionalAccessPolicies.enforcedGrantControls<span class="variable">$k</span>"</span> = <span class="variable">$temp</span>&#125; -PassThru</span><br><span class="line"> </span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies[<span class="variable">$k</span>].enforcedSessionControls</span><br><span class="line">                <span class="variable">$eachEvent</span> = <span class="variable">$eachEvent</span> | <span class="built_in">Add-Member</span> @&#123;<span class="string">"conditionalAccessPolicies.enforcedSessionControls<span class="variable">$k</span>"</span> = <span class="variable">$temp</span>&#125; -PassThru</span><br><span class="line"> </span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$thisEvent</span>.conditionalAccessPolicies[<span class="variable">$k</span>].result</span><br><span class="line">                <span class="variable">$eachEvent</span> = <span class="variable">$eachEvent</span> | <span class="built_in">Add-Member</span> @&#123;<span class="string">"conditionalAccessPolicies.result<span class="variable">$k</span>"</span> = <span class="variable">$temp</span>&#125; -PassThru</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$data</span> += <span class="variable">$eachEvent</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#Get url from next link</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="variable">$url</span> = (<span class="variable">$myReport</span>.Content | <span class="built_in">ConvertFrom-Json</span>).<span class="string">'@odata.nextLink'</span></span><br><span class="line">    &#125;<span class="keyword">while</span> (<span class="variable">$url</span> <span class="nomarkup">-ne</span> <span class="literal">$null</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"ERROR: No Access Token"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$data</span> | Sort -Property createdDateTime  | <span class="built_in">Export-Csv</span> <span class="variable">$outfile</span> -encoding <span class="string">"utf8"</span> -NoTypeInformation</span><br></pre></td></tr></table></figure><p>このスクリプトで取得できるサインイン アクティビティ レポートをさらに詳細にフィルターしたい場合、以下の公開情報を参照いただければと思います。</p><ul><li>signIn resource type<br><a href="https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/resources/signin" target="_blank" rel="noopener">https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/resources/signin</a></li></ul><p>次回は監査アクティビティ レポートの取得方法を紹介いたします。</p><p>このブログの情報がお客様の検証や運用のお役に少しでもお役に立てばと思います。</p><p>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。</p><p>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは Azure &amp;amp; Identity サポート チームの 姚 ヨウです。&lt;/p&gt;
&lt;p&gt;前回、Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを Azure AD Graph API を経緯し、PowerShell で 
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
      <category term="graph api" scheme="https://jpazureid.github.io/tags/graph-api/"/>
    
      <category term="signin log" scheme="https://jpazureid.github.io/tags/signin-log/"/>
    
  </entry>
  
  <entry>
    <title>”Baseline policy: Require MFA for admins” について</title>
    <link href="https://jpazureid.github.io/azure-active-directory/about-baseline-policy-require-mfa-for-admins/"/>
    <id>https://jpazureid.github.io/azure-active-directory/about-baseline-policy-require-mfa-for-admins/</id>
    <published>2018-08-05T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.042Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure ID チームの宮林です。<br>今回は下記のとおり、6/22 より Public Preview となった “Baseline policy: Require MFA for admins” についてお知らせいたします。</p><ul><li>Baseline security policy for Azure AD admin accounts in public preview!<ul><li><a href="https://cloudblogs.microsoft.com/enterprisemobility/2018/06/22/baseline-security-policy-for-azure-ad-admin-accounts-in-public-preview/" target="_blank" rel="noopener">https://cloudblogs.microsoft.com/enterprisemobility/2018/06/22/baseline-security-policy-for-azure-ad-admin-accounts-in-public-preview/</a></li></ul></li><li>ベースラインの保護とは (プレビュー)<ul><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-conditional-access-baseline-protection" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-conditional-access-baseline-protection</a></li></ul></li></ul><img src="/blog/azure-active-directory/about-baseline-policy-require-mfa-for-admins/Baseline-policy-Require-MFA-for-admins-pic3-1024x237.jpg"><p>(こちらが対象のポリシーとなります)</p><blockquote><p>“Baseline policy: Require MFA for admins” とは<br>“Baseline policy: Require MFA for admins” は、特権ロールを持つアカウントに対して多要素認証 (MFA : Multi Factor Authentication) を必要とさせるポリシーです。将来的にすべての Azure Active Directory テナントにおいて、既定で有効となるポリシーです。有効化に際して別途、課金が発生することはございません。<br>対象となる特権ロールは以下の 5 つのロールを持つアカウントとなり、下記 5 つのロール以外のユーザーにはこのポリシーは適用されず、影響はありません。</p><ul><li>全体管理者</li><li>SharePoint 管理者</li><li>Exchange 管理者</li><li>条件付きアクセス管理者</li><li>セキュリティ管理者</li></ul></blockquote><p>現時点において “Baseline policy: Require MFA for admins(プレビュー)” の状態は、既定で [将来、ポリシーを自動的に有効化] です。</p><img src="/blog/azure-active-directory/about-baseline-policy-require-mfa-for-admins/Baseline-policy-Require-MFA-for-admins-pic2.jpg"><p>このポリシーが有効になる時期については、ブログ執筆時において皆様にご案内できる情報がありませんが、有効になる時期について情報更新がありましたら、本ブログについても更新を予定しています。</p><h2 id="自動的に有効化-する設定の無効化について"><a href="#自動的に有効化-する設定の無効化について" class="headerlink" title="[自動的に有効化] する設定の無効化について"></a>[自動的に有効化] する設定の無効化について</h2><p>このポリシーを将来、自動的に有効にしたくない場合には、該当のポリシーを今のうちから無効にしてください。以下の手順でポリシーを無効、あるいは、ポリシー自体は有効としておきつつも、特定の管理者のみを除外することが可能です。</p><ol><li>Azure ポータル(<a href="https://portal.azure.com/" target="_blank" rel="noopener">https://portal.azure.com/</a>) にログイン</li><li>[Azure Active Directory] – [条件付きアクセス] – [Baseline policy: Require MFA for admins (プレビュー)] を選択</li><li>[ポリシーを使用しない] もしくは、[ユーザーとグループの除外]より除外するユーザーを選択</li></ol><p>運用のご要件上、”Baseline policy: Require MFA for admins” を無効にする場合にも、改めてこのポリシーを有効にすることについては是非ご検討ください。なぜなら、昨今 ID に対する攻撃が大変に増加傾向にあり、この脅威への対策の必要性が高まっているからです。以下の参考ページでは、ID に対する代表的な攻撃手法の1つであるパスワードスプレーの説明と、その防衛策について紹介しています。</p><p><a href="/blog/./password-sprey-attack/">Azure AD と AD FS のベスト プラクティス: パスワード スプレー攻撃の防御</a></p><p>Azure Active Directory において、特権ロールのアカウントが悪意のあるユーザーに乗っ取られることは、大きな被害を生む可能性を孕んでいます。パスワード スプレーのような脅威から ID を守り、Azure Active Directory の認証基盤としての安全性を高めるためには、多要素認証が非常に効果的です。そのため、弊社では “Baseline policy: Require MFA for admins” の有効化を推奨しております。</p><p>また、現時点から [ポリシーをすぐに使用する] に設定を変更することで、本ポリシーの機能をご利用いただくことも可能です。</p><p>セキュリティと利便性は相反することが多く、どちらかのメリットを得ることで反対のデメリットが生じる場合もございますが、リスクの可能性が現実となった際の影響の大きさも考慮の上、ぜひ導入をご検討いただければと存じます。<br>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。</p><p>上記内容が少しでも皆様の参考となりますと幸いです。<br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure ID チームの宮林です。&lt;br&gt;今回は下記のとおり、6/22 より Public Preview となった “Baseline policy: Require MFA for admins” についてお知らせいたします。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B
      
    
    </summary>
    
    
      <category term="Conditional Access" scheme="https://jpazureid.github.io/tags/Conditional-Access/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD の ExpressRoute サポート</title>
    <link href="https://jpazureid.github.io/azure-active-directory/expressroute-support/"/>
    <id>https://jpazureid.github.io/azure-active-directory/expressroute-support/</id>
    <published>2018-07-18T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.224Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、 Azure ID チームの三浦です。</p><p><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/whats-new#may-2018" target="_blank" rel="noopener">2018 年 5 月の Azure AD に対する更新情報</a> に記載の  ExpressRoute 利用環境における Azure AD への認証トラフィックの変更について、その変更の内容、変更の影響を受ける場合の対応策についてご案内します。</p><h2 id="変更の内容"><a href="#変更の内容" class="headerlink" title="変更の内容"></a>変更の内容</h2><p>Azure AD の認証トラフィックを処理するエンドポイント (IP アドレス) について、これまで ExpressRoute で Public ピアリング、 Microsoft ピアリングのいずれにおいてもルート情報がアドバタイズされていました。<br>言い換えますと ExpressRoute で Public ピアリングや Microsoft ピアリングを有効にして利用している環境では、 Azure AD に対する認証トラフィックが ExpressRoute を経由していました。</p><p>これが 2018 年 8 月 1 日から次のように変更されます。</p><p><strong>Microsoft ピアリング、かつ ExpressRoute を利用するサービスとして “その他の Office 365 Online サービス (12076:5100)” の BGP コミュニティを利用するように構成されている場合のみ ExpressRoute を経由する</strong></p><p>結果として、上記のような構成以外では、 ExpressRoute を経由することなく、インターネットを利用して通信するようになります。<br>なお、 Azure AD にはリージョンが無いため、その認証トラフィックは必ずしも指定したリージョンに留まりません。そのため、これまでも ExpressRoute の構成として <a href="https://azure.microsoft.com/ja-jp/pricing/details/expressroute/" target="_blank" rel="noopener">ExpressRoute Premium アドオン</a> を利用していなかった場合には、 Azure AD への認証トラフィックは必ずしも ExpressRoute を経由しませんでした。つまり、現状でも ExpressRoute を利用している環境でも今回の変更とは関係なく、Azure AD への通信はインターネット経由となっている可能性があります。</p><h2 id="何をするべきか"><a href="#何をするべきか" class="headerlink" title="何をするべきか"></a>何をするべきか</h2><p>基本的にはそれほど注意することはありません。注意しなければいけないのは以下の条件を全て満たすケースです。</p><ul><li>ExpressRoute を利用している</li><li>ExpressRoute で Public ピアリングを利用している、または Microsoft ピアリングを利用しているが、 “その他の Office 365 Online サービス (12076:5100)” コミュニティを有効にしていない</li><li>インターネットへのアクセスを特定の URL のみを通すようにプロキシなどで URL フィルタを実施している</li></ul><p>これまでは、上記条件を全て満たしている場合でも  ExpressRoute を経由して Azure AD への認証通信がおこなわれていたため、インターネットへのアクセス フィルタなどで、 Azure AD 認証に利用される URL を許可していなくとも問題ありませんでした。</p><p>2018 年 8 月 1 日以降は、上記条件を満たしている場合、 Azure AD への認証が通らなくなる恐れがあり、その結果として Azure や Office 365 などの各種サービスが利用できなくなる可能性があります。<br>対応策としては、次の公開情報で記載されています URL のうち <strong>Office 365 ポータルと共有</strong> と <strong>Office 365 の認証と ID</strong> に含まれるものについて、利用しているネットワークからインターネットにアクセスができるように、利用しているプロキシなどの設定変更を実施します。</p><p>Office 365 URL および IP アドレス範囲<br><a href="https://support.office.com/ja-jp/article/Office-365-URL-%e3%81%8a%e3%82%88%e3%81%b3-IP-%e3%82%a2%e3%83%89%e3%83%ac%e3%82%b9%e7%af%84%e5%9b%b2-8548a211-3fe7-47cb-abb1-355ea5aa88a2" target="_blank" rel="noopener">https://support.office.com/ja-jp/article/Office-365-URL-%e3%81%8a%e3%82%88%e3%81%b3-IP-%e3%82%a2%e3%83%89%e3%83%ac%e3%82%b9%e7%af%84%e5%9b%b2-8548a211-3fe7-47cb-abb1-355ea5aa88a2</a></p><h2 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h2><p>現状は Azure AD の認証トラフィックに関連した経路は次の種類の ExpressRoute にてアドバタイズされています。</p><ol><li>Public ピアリング</li><li>Microsoft ピアリングの Azure の全てのリージョン コミュニティ</li><li>Microsoft ピアリングでの “その他の Office 365 Online サービス (12076:5100)” コミュニティ</li></ol><p>2018 年 8 月 1 日以降は 3 のみが ExpressRoute でアドバタイズされることになります。<br>各ピアリングについても 2018 年 4 月 1 日以降に考え方が変わり、例えば Public ピアリングについての新規構成が停止されているなどありますので、こちらについての詳細は以下の記事を参照ください。</p><p>ExpressRoute の Public Peering と Microsoft Peering に関するアナウンス<br><a href="https://blogs.technet.microsoft.com/jpaztech/2018/03/02/expressroute-announcement-march-2018/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpaztech/2018/03/02/expressroute-announcement-march-2018/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、 Azure ID チームの三浦です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/whats-new#may-2018&quot; target
      
    
    </summary>
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/tags/Azure-AD/"/>
    
      <category term="ExpressRoute" scheme="https://jpazureid.github.io/tags/ExpressRoute/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Connect サーバー - ウィルス対策ソフト除外項目 / 使用する通信ポート</title>
    <link href="https://jpazureid.github.io/azure-active-directory-connect/port-used-by-aadc/"/>
    <id>https://jpazureid.github.io/azure-active-directory-connect/port-used-by-aadc/</id>
    <published>2018-07-02T15:00:00.000Z</published>
    <updated>2019-04-02T06:06:54.382Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Identity サポートの谷です。<br>Azure AD Connect サーバーを新規構築に構築する場合や既存環境のセキュリティ面での見直しなどの背景により、<br>サードパーティ製のウィルス対策ソフトやファイアウォールでの通信制限についてのお問い合わせを多くいただいています。<br>公開情報等の情報を踏まえ、これらの情報を一目できるようにお纏めしました。<br>構築時や運用時の参考にしていただければ幸いです。</p><h2 id="ウィルス対策ソフトでのスキャン除外項目"><a href="#ウィルス対策ソフトでのスキャン除外項目" class="headerlink" title="ウィルス対策ソフトでのスキャン除外項目"></a>ウィルス対策ソフトでのスキャン除外項目</h2><p>基本的には SQL Server 2012 Express LocalDB としての除外をご考慮いただければと存じますので、以下の技術情報をまずは参考としてご参照いただければと存じます。<br>Title: <a href="https://support.microsoft.com/ja-jp/help/309422/how-to-choose-antivirus-software-to-run-on-computers-that-are-running" target="_blank" rel="noopener">SQL Server を実行しているコンピューター上で実行するウイルス対策ソフトウェアを選択する方法</a><br>上記技術情報を踏まえ、AADC 製品を添付の SQL Server 2012 Express LocalDB をご利用いただいた状態で、既定でセットアップされた際の除外対象は以下となります。</p><ul><li>SQL Server データ ファイル格納先<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Microsoft Azure AD Sync\Data</span><br></pre></td></tr></table></figure></li></ul><p>※ 一時的に利用される場合があるため、[C:\Program Files\Microsoft Azure AD Sync\MaData] も併せて除外していただければと存じます。</p><ul><li>ウイルス スキャンから除外するプロセス<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Microsoft SQL Server\110\LocalDB\Binn\sqlservr.exe</span><br></pre></td></tr></table></figure></li></ul><p>上記に加え、SQL Server 観点として技術情報にございます [.bak / .trn / .trc / .sql] の拡張子を持つファイルの除外も念のためご検討ください。</p><h2 id="通信ポート要件"><a href="#通信ポート要件" class="headerlink" title="通信ポート要件"></a>通信ポート要件</h2><p>Azure AD Connect サーバーの通信要件は下記弊社サイトにてまとめさせていただいております。<br>Title : <a href="https://docs.microsoft.com/ja-jp/azure/active-directory/connect/active-directory-aadconnect-ports" target="_blank" rel="noopener">ハイブリッド ID で必要なポートとプロトコル</a><br>上記サイト内で Azure AD Connect の要件として必要な表は下記となります。</p><p>表 1 - Azure AD Connect とオンプレミスの AD<br>表 2 - Azure AD Connect と Azure AD<br>表 6a - SSO でのパススルー認証のトラブルシューティング<br>表 6b - SSO でのパスワード ハッシュ同期<br>表 7a - Azure AD Connect Health エージェント (AD FS/Sync) と Azure AD 用のポートとプロトコル<br>表 7b - Azure AD Connect Health エージェント (AD FS/Sync) と Azure AD 用のエンドポイント  </p><p>上述のサイト内にもリンクがありますが、Azure AD Connect の接続先である Azure サービス (AAD など) の接続先 IP アドレスは下記となります。</p><p>Title: <a href="https://docs.microsoft.com/ja-jp/office365/enterprise/urls-and-ip-address-ranges?redirectSourcePath=%252fja-jp%252farticle%252foffice-365-url-%25e3%2581%258a%25e3%2582%2588%25e3%2581%25b3-ip-%25e3%2582%25a2%25e3%2583%2589%25e3%2583%25ac%25e3%2582%25b9%25e7%25af%2584%25e5%259b%25b2-8548a211-3fe7-47cb-abb1-355ea5aa88a2" target="_blank" rel="noopener">Office 365 の URL と IP アドレスの範囲</a></p><p>この情報は将来的に変更が行われる可能性があります。<br>上記の内容を下記表にて纏めさせていただきました。</p><img src="/blog/azure-active-directory-connect/port-used-by-aadc/ports.jpg"> <p>1 : ポート番号 : 49152 ～ 65535<br>2 : Azure AD Connect Health Agent を使用する場合のみです。<br>Azure AD Connect Healt Agent の通信ポート以外の要件については <a href="https://docs.microsoft.com/ja-jp/azure/active-directory/hybrid/how-to-connect-health-agent-install" target="_blank" rel="noopener">こちら</a> をご参照ください。<br>その他ご利用のサービスなどで使用するポートや懸念事項がございましたら、お気軽に弊社テクニカル サポートまでご連絡いただければ幸いです。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは！Azure Identity サポートの谷です。&lt;br&gt;Azure AD Connect サーバーを新規構築に構築する場合や既存環境のセキュリティ面での見直しなどの背景により、&lt;br&gt;サードパーティ製のウィルス対策ソフトやファイアウォールでの通信制限についてのお
      
    
    </summary>
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/tags/AAD-Connect/"/>
    
  </entry>
  
</feed>
